{"version":3,"sources":["webpack://tased/./node_modules/@azure/msal-browser/dist/index.es.js","webpack://tased/./node_modules/@microsoft/teams-js/dist/MicrosoftTeams.min.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","extendStatics$1","__extends$1","__assign$1","__awaiter$1","__generator$1","__spreadArrays","il","r","k","a","j","jl","LogLevel","AuthErrorMessage","code","desc","AuthError","_super","errorCode","errorMessage","_this","errorString","name","createUnexpectedError","errDesc","Error","pkg","ClientAuthErrorMessage","ClientAuthError","createClientInfoDecodingError","caughtError","createClientInfoEmptyError","rawClientInfo","createIdTokenParsingError","caughtExtractionError","createIdTokenNullOrEmptyError","invalidRawTokenString","createTokenRequestCacheError","errDetail","createEndpointDiscoveryIncompleteError","createInvalidAuthorityTypeError","givenUrl","createHashNotDeserializedError","hashParamObj","createStateMismatchError","createNonceMismatchError","createAccountMismatchError","createInvalidIdTokenError","idToken","JSON","stringify","createNoTokensFoundError","scopes","createCacheParseError","cacheKey","createUserLoginRequiredError","createMultipleMatchingTokensInCacheError","scope","createTokenRequestCannotBeMadeError","createAppendEmptyScopeToSetError","givenScope","createRemoveEmptyScopeFromSetError","createAppendScopeSetError","appendError","createEmptyInputScopeSetError","givenScopeSet","createDeviceCodeCancelledError","createDeviceCodeExpiredError","StringUtils","decodeJwt","jwtToken","isEmpty","matches","exec","header","JWSPayload","JWSSig","str","queryStringToObject","query","match","pl","search","decode","decodeURIComponent","replace","obj","trimAndConvertArrayEntriesToLowerCase","arr","map","entry","trim","toLowerCase","removeEmptyStringsFromArray","filter","HeaderNames","TemporaryCacheKeys","PersistentCacheKeys","Logger","loggerOptions","level","Info","localCallback","loggerCallback","piiLoggingEnabled","logLevel","logMessage","options","containsPii","timestamp","Date","toUTCString","log","correlationId","executeCallback","message","error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","isPiiLoggingEnabled","Constants","AADAuthorityConstants","AADServerParamKeys","IdTokenClaimName","AADTrustedHostList","SSOTypes","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","ResponseMode","GrantType","BlacklistedEQParams","SID","LOGIN_HINT","CodeChallengeMethodValues","PLAIN","S256","DEFAULT_AUTH_OPTIONS","clientId","authority","knownAuthorities","redirectUri","postLogoutRedirectUri","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","telemetry","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_STORAGE_IMPLEMENTATION","clear","containsKey","getItem","getKeys","removeItem","setItem","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","_a","sendPostRequestAsync","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","generatePkceCodes","DEFAULT_LIBRARY_INFO","sku","version","cpu","os","AuthorityType","AccessTokenCacheItem","key","CacheHelpers","cacheImpl","cacheStorage","generateAcquireTokenAccountKey","accountId","ACQUIRE_TOKEN_ACCOUNT","generateAuthorityKey","state","AUTHORITY","generateNonceKey","NONCE_IDTOKEN","setAccountCache","account","homeAccountIdentifier","acquireTokenAccountKey","setAuthorityCache","authorityKey","canonicalAuthority","updateCacheEntries","serverAuthenticationRequest","REQUEST_STATE","nonce","authorityInstance","resetTempCacheItems","forEach","indexOf","splitKey","split","REQUEST_PARAMS","ORIGIN_URI","getAllAccessTokens","resource","reduce","tokens","parseAtKey","parse","checkForExactKeyMatch","newAccessTokenCacheItem","concat","removeAllAccessTokens","atKey","hasClientId","hasAuthorityUri","hasResourceUri","hasHomeAccountId","ClientConfigurationErrorMessage","ClientConfigurationError","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createClaimsRequestParsingError","claimsRequestParseError","createInsecureAuthorityUriError","urlString","createUrlParseError","urlParseError","createUrlEmptyError","createScopesNonArrayError","inputScopes","createEmptyScopesArrayError","createClientIdSingleScopeError","createInvalidPromptError","promptValue","createEmptyTokenRequestError","createInvalidCodeChallengeMethodError","createInvalidCodeChallengeParamsError","createKnownAuthoritiesNotSetError","createUntrustedAuthorityError","UrlString","url","_urlString","getHash","canonicalizeUri","defineProperty","get","enumerable","configurable","endsWith","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","urlRemoveQueryStringParameter","regex","RegExp","replaceTenantPath","tenantId","urlObject","pathArray","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","hashIndex1","hashIndex2","substring","getDeserializedHash","hash","deserializedHash","regEx","urlComponents","AbsolutePath","pathSegments","val","join","hashContainsKnownProperties","parameters","error_description","Authority","networkInterface","_canonicalAuthority","set","_canonicalAuthorityUrlComponents","canonicalAuthorityUrlComponents","discoveryComplete","replaceTenant","tenantDiscoveryResponse","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","tenant","discoverEndpoints","openIdConfigurationEndpoint","resolveEndpointsAsync","openIdConfigEndpoint","response","getOpenIdConfigurationEndpointAsync","AadAuthority","Aad","isInTrustedHostList","defaultOpenIdConfigurationEndpoint","aadInstanceDiscoveryEndpointUrl","tenant_discovery_endpoint","host","includes","B2cAuthority","setKnownAuthorities","B2CTrustedHostList","B2C","AuthorityFactory","detectAuthorityFromUrl","authorityString","Adfs","keys","createInstance","authorityUrl","BaseClient","configuration","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","libraryInfo","config","authOptions","systemOptions","storageInterface","cryptoInterface","logger","cryptoUtils","cacheManager","networkClient","defaultAuthorityInstance","createAuthority","catch","createDefaultTokenRequestHeaders","headers","createDefaultLibraryHeaders","CONTENT_TYPE","Map","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","executePostToTokenEndpoint","tokenEndpoint","queryString","ScopeSet","scopesRequired","filteredInput","validateInputScopes","scopeArr","Set","appendScope","originalScopes","replaceDefaultScopes","fromString","inputScopeString","appClientId","has","removeScope","isArray","containsScope","containsScopeSet","scopeSet","size","asArray","every","newScope","add","appendScopes","newScopes","newScopeSet","unionScopeSets","delete","otherScopes","from","intersectingScopeSets","unionScopes","sizeOtherScopes","getScopeCount","sizeThisScopes","isLoginScopeSet","hasLoginScopes","getOriginalScopesAsArray","printScopes","ProtocolUtils","setRequestState","userState","randomGuid","getUserRequestState","serverResponseState","splitIndex","ServerCodeRequestParameters","userRequest","cachedAccount","cryptoImpl","isLoginCall","cryptoObj","xClientSku","xClientVer","responseType","appendExtraScopes","userRequestState","extraScopesToConsent","hasSSOParam","isSSORequest","sid","loginHint","addSSOQueryParameters","adalIdToken","serverReqParam","prompt","userName","claims","upn","populateQueryParams","adalIdTokenObject","eQParams","queryParameters","validatePromptParameter","sanitizeEQParams","generateQueryParametersString","extraQueryParameters","createNavigateUrl","paramStrings","authEndpoint","createParamString","authorizationEndpoint","_b","RESPONSE_TYPE","SCOPE","encodeURIComponent","CLIENT_ID","REDIRECT_URI","STATE","NONCE","CLIENT_INFO","generatedPkce","CODE_CHALLENGE","challenge","CODE_CHALLENGE_METHOD","RESOURCE","PROMPT","CLIENT_REQUEST_ID","RESPONSE_MODE","request","ssoQueryParams","param","DOMAIN_HINT","paramsString","ServerTokenRequestParameters","tokenRequest","codeResponse","refreshToken","createRequestHeaders","createRequestBody","CODE","CODE_VERIFIER","codeVerifier","GRANT_TYPE","REFRESH_TOKEN","IdToken","rawIdToken","crypto","extractIdToken","encodedIdToken","decodedToken","base64IdTokenPayload","base64Decoded","err","buildClientInfo","decodedClientInfo","HTTP_REQUEST_TYPE","Account","accountIdentifier","idTokenClaims","preferred_username","environment","iss","createAccount","clientInfo","oid","sub","uid","utid","compareAccounts","a1","a2","TimeUtils","nowSeconds","Math","round","getTime","AccessTokenKey","authorityUri","AccessTokenValue","tokenType","accessToken","expiresOn","extExpiresOn","expiresOnSec","extExpiresOnSec","ServerError","subError","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthError","isInteractionRequiredError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","ResponseHandler","setResponseIdToken","originalResponse","idTokenObj","expiresSeconds","Number","exp","uniqueId","tid","handleServerCodeResponse","serverParams","validateServerAuthorizationCodeResponse","client_info","serverResponseHash","cachedState","suberror","validateServerAuthorizationTokenResponse","serverResponse","errString","error_codes","correlation_id","trace_id","saveToken","originalTokenResponse","serverTokenResponse","responseScopes","responseScopeArray","expiresIn","expires_in","expirationSec","extendedExpirationSec","ext_expires_in","ID_TOKEN","newAccessTokenValue","token_type","access_token","refresh_token","toString","accessTokenCacheItems","accessTokenCacheItem","cachedScopes","newTokenKey","getCachedAccount","accountKey","createTokenResponse","tokenResponse","cachedIdToken","id_token","SPAClient","createLoginUrl","createUrl","createAcquireTokenUrl","acquireTokenAuthority","e_1","requestParameters","adalIdTokenString","urlNavigate","e_2","getAccount","getRedirectUri","ADAL_ID_TOKEN","verifier","acquireToken","e_3","tokenReqParams","e_4","getCachedRequest","getTokenResponse","getValidToken","requestScopes","e_5","cachedTokenItem","offsetCurrentTimeSec","defaultTokenResponse","e_6","getCachedTokens","forceRefresh","renewToken","logout","currentAccount","e_7","POST_LOGOUT_URI","getPostLogoutRedirectUri","endSessionEndpoint","handleFragmentResponse","hashFragment","responseHandler","cancelRequest","encodedTokenRequest","parsedRequest","cachedAuthority","resourceId","tokenCacheItems","filteredCacheItems","cacheItem","acquiredTokenResponse","refreshTokenRequest","RequestParameterBuilder","addResponseTypeCode","addResponseMode","responseMode","addScopes","addClientId","addRedirectUri","addDomainHint","domainHint","addLoginHint","addClaims","CLAIMS","addCorrelationId","addPrompt","addState","addNonce","addCodeChallengeParams","codeChallenge","codeChallengeMethod","addAuthorizationCode","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","addGrantType","grantType","createQueryString","queryParameterArray","RequestValidator","validateRedirectUri","validatePrompt","validateCodeChallengeParams","validateCodeChallengeMethod","BrowserConstants","AuthorizationCodeClient","getAuthCodeUrl","createAuthCodeUrlQueryString","executeTokenRequest","requestBody","createTokenRequestBody","parameterBuilder","AUTHORIZATION_CODE_GRANT","DeviceCodeClient","deviceCodeResponse","getDeviceCode","deviceCodeCallback","acquireTokenWithDeviceCode","deviceCodeUrl","createDeviceCodeUrl","executeGetRequestToDeviceCodeEndpoint","userCode","deviceCode","verificationUri","interval","user_code","device_code","verification_uri","deviceCodeExpirationTime","pollingIntervalMilli","intervalId","setInterval","error_1","cancel","clearInterval","DEVICE_CODE_GRANT","RefreshTokenClient","REFRESH_TOKEN_GRANT","FetchClient","fetch","method","GET","getFetchHeaders","getHeaderMap","json","status","reqBody","POST","Headers","append","headerMap","BrowserAuthErrorMessage","BrowserAuthError","createNoWindowObjectError","createPkceNotGeneratedError","createCryptoNotAvailableError","createHttpMethodNotImplementedError","createEmptyNavigationUriError","createEmptyHashError","hashValue","createInteractionInProgressError","createPopupWindowError","createEmptyWindowCreatedError","createUserCancelledError","createMonitorWindowTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createIframeClosedPrematurelyError","createSilentSSOInsufficientInfoError","createSilentPromptValueError","givenPrompt","XhrClient","sendRequestAsync","xhr","XMLHttpRequest","open","setXhrHeaders","onload","responseText","jsonResponse","networkResponse","onerror","send","setRequestHeader","headerArr","getAllResponseHeaders","parts","headerName","shift","headerVal","BrowserUtils","navigateWindow","noHistory","window","location","clearHash","isInIframe","parent","getCurrentUri","href","getBrowserNetworkClient","blockReloadInHiddenIframes","detectIEOrEdge","ua","navigator","userAgent","msie","msie11","msedge","DEFAULT_AUTH_OPTIONS$1","navigateToLoginRequestUrl","DEFAULT_CACHE_OPTIONS","cacheLocation","storeAuthStateInCookie","DEFAULT_LOGGER_OPTIONS","console","debug","warn","DEFAULT_BROWSER_SYSTEM_OPTIONS","windowHashTimeout","iframeHashTimeout","loadFrameTimeout","BrowserConfigurationAuthErrorMessage","BrowserConfigurationAuthError","createStorageNotSupportedError","givenStorageLocation","createInvalidCallbackObjectError","callbackObject","createRedirectCallbacksNotSetError","BrowserStorage","cacheConfig","validateWindowStorage","windowStorage","migrateCacheEntries","idTokenKey","clientInfoKey","errorKey","ERROR","errorDescKey","ERROR_DESC","values","index","migrateCacheEntry","newKey","generateCacheKey","validateObjectKey","startsWith","msalKey","setItemCookie","itemCookie","getItemCookie","clearItemCookie","cookieName","cookieValue","expires","cookieStr","getCookieExpirationTime","document","cookie","cookieList","charAt","clearMsalCookie","nonceKey","cookieLifeDays","today","MathUtils","decimalToHex","num","hex","GuidGenerator","generateGuid","buffer","Uint8Array","getRandomValues","guidHolder","guidResponse","random","isGuid","guid","test","BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","charCodeAt","aBytes","nIdx","nChrIdx","utf8ArrToString","sView","nPart","nLen","String","fromCharCode","Base64Encode","urlEncode","input","encode","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","Base64Decode","encodedString","base64DecToArr","base64String","nBlockSize","nInLen","nOutLen","ceil","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","CV_CHARSET","PkceGenerator","generateCodes","generateCodeVerifier","generateCodeChallengeFromVerifier","pkceCodeVerifierString","bufferToCVString","pkceCodeVerifier","pkceHashedCodeVerifier","sha256Digest","charArr","byteLength","BrowserCrypto","hasCryptoAPI","dataString","data","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","dataBuffer","hasBrowserCrypto","algorithm","subtle","digest","digestOperation","addEventListener","target","CryptoOps","browserCrypto","b64Encode","b64Decode","guidGenerator","pkceGenerator","InteractionHandler","authCodeModule","storageImpl","authModule","browserStorage","handleCodeResponse","locationHash","RedirectHandler","initiateAuthRequest","requestUrl","isIframedApp","URL_HASH","PopupHandler","unloadWindow","bind","openPopup","monitorWindowForHash","contentWindow","timeout","maxTicks","ticks","closed","cleanPopup","contentHash","title","popUpWidth","popUpHeight","winLeft","screenLeft","screenX","winTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","left","top_1","popupWindow","focus","currentWindow","close","removeEventListener","SilentHandler","configuredLoadFrameTimeout","userRequestScopes","frameName","loadFrame","loadFrameSync","monitorFrameForHash","iframe","removeHiddenIframe","setTimeout","frameHandle","getHiddenIframe","src","iframeId","authFrame","getElementById","createElement","ifr","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","insertAdjacentHTML","frames","parentNode","removeChild","PublicClientApplication","userInputAuth","userInputCache","userInputSystem","auth","cache","system","tokenExchangePromise","handleRedirectResponse","handleRedirectCallback","authCallback","err_1","handleRedirectPromise","cachedHash","isResponseHash","loginRequestUrl","currentUrl","handleHash","responseHash","interactionHandler","cleanRequest","loginRedirect","preflightRequest","interactionHandler_1","navigateUrl","acquireTokenRedirect","interactionHandler_2","loginPopup","popupTokenHelper","acquireTokenPopup","ssoSilent","silentRequest","scopeString","silentTokenHelper","acquireTokenSilent","isServerError","isInvalidGrantError","silentHandler","msalFrame","logoutUri","interactionInProgress","module","exports","l","m","c","o","toStringTag","__esModule","default","initializeCalled","initializeCompleted","additionalValidOrigins","additionalValidOriginsRegexp","initializeCallbacks","isFramelessWindow","parentMessageQueue","childMessageQueue","nextMessageId","handlers","callbacks","printCapabilityEnabled","GlobalVars","u","id","args","func","parentWindow","childWindow","parentOrigin","childOrigin","postMessage","nativeInterface","framelessPostMessage","V","h","G","themeChange","themeChangeHandler","fullScreenChange","fullScreenChangeHandler","backButtonPress","backButtonPressHandler","navigateBack","load","loadHandler","beforeUnload","beforeUnloadHandler","changeSettings","changeSettingsHandler","startConversation","onStartConversationHandler","subEntityId","conversationId","channelId","entityId","closeConversation","onCloseConversationHandler","ensureInitialized","frameContext","processMessage","source","originalEvent","origin","validOriginRegExp","handleParentMessage","processAdditionalValidOrigins","userOriginUrlValidationRegExp","generateRegExpFromUrls","waitForMessageQueue","sendMessageRequestToParent","sendMessageEventToChild","validOrigins","frameContexts","settings","content","authentication","remove","task","getGenericOnCompleteHandler","self","opener","onNativeMessage","hostClientType","_uninitialize","logs","registerGetLogHandler","registerOnSaveHandler","registerOnRemoveHandler","print","initialize","_initialize","enablePrintCapability","ctrlKey","metaKey","keyCode","cancelBubble","preventDefault","stopImmediatePropagation","getContext","registerOnThemeChangeHandler","registerFullScreenHandler","registerBackButtonHandler","registerOnLoadHandler","registerBeforeUnloadHandler","registerChangeSettingsHandler","navigateCrossDomain","getTabInstances","getMruTabInstances","shareDeepLink","subEntityLabel","subEntityWebUrl","executeDeepLink","navigateToTab","setFrameContext","initializeWithFrameContext","notifySuccess","setValidityState","getSettings","setSettings","notified","ensureNotNotified","notifyFailure","getLogHandler","messageForParent","ChildAppWindow","_instance","messageForChild","ParentAppWindow","bot","menus","enterFullscreen","exitFullscreen","getChatMembers","getConfigSetting","getUserJoinedTeams","openFilePreview","sendCustomMessage","showNotification","sendCustomEvent","registerCustomHandler","uploadCustomApp","conversations","sendQuery","getSupportedCommands","authenticate","Results","Auth","ResponseType","enabled","MenuItem","dropDown","popOver","MenuListType","navBarMenuItemPress","actionMenuItemPress","setModuleView","setUpViews","setNavBarMenu","showActionMenu","description","type","objectUrl","downloadUrl","webPreviewUrl","webEditUrl","baseUrl","editFile","notificationType","openConversation","onCloseConversation","onStartConversation","appInitialization","tasks","notifyAppLoaded","reason","min","outerWidth","outerHeight","failureCallback","substr","successCallback","registerAuthenticationHandlers","getAuthToken","resources","getUser","__rest","getOwnPropertySymbols","startTask","updateTask","submitTask"],"mappings":"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","file":"3bd6df7e5a35446177a4.js","sourcesContent":["/*! @azure/msal-browser v2.0.0-beta.2 2020-05-12 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\n/*! @azure/msal-common v1.0.0-beta.2 2020-05-12 */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics$1 = function(d, b) {\r\n    extendStatics$1 = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics$1(d, b);\r\n};\r\n\r\nfunction __extends$1(d, b) {\r\n    extendStatics$1(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter$1(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator$1(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends$1(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0-beta.2\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/debug\": \"^4.1.5\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.4\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypescript: \"^3.7.5\"\n};\nvar dependencies = {\n\tdebug: \"^4.1.1\"\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority, resource, or account.\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends$1(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    ClientAuthError.createTokenRequestCacheError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCacheError.code, ClientAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function (scopes) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc + \" Scopes: \" + scopes);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries and converts them to lower case.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimAndConvertArrayEntriesToLowerCase = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim().toLowerCase(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance\",\r\n    // Device code endpoint path\r\n    DEVICE_CODE_ENDPOINT_PATH: \"oauth2/v2.0/devicecode\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    QUERY_RESPONSE_MODE: \"query\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nvar TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.idtoken\";\r\n    TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\r\n    TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * List of pre-established trusted host URLs.\r\n */\r\nvar AADTrustedHostList = [\r\n    \"login.windows.net\",\r\n    \"login.chinacloudapi.cn\",\r\n    \"login.cloudgovapi.us\",\r\n    \"login.microsoftonline.com\",\r\n    \"login.microsoftonline.de\",\r\n    \"login.microsoftonline.us\"\r\n];\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"RESOURCE\"] = \"resource\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n})(GrantType || (GrantType = {}));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: \"\",\r\n    knownAuthorities: [],\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\"\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    telemetry: null\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\nvar DEFAULT_STORAGE_IMPLEMENTATION = {\r\n    clear: function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    containsKey: function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getItem: function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    getKeys: function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    removeItem: function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    setItem: function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    }\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, libraryInfo = _a.libraryInfo;\r\n    return {\r\n        authOptions: __assign$1(__assign$1({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\r\n        systemOptions: __assign$1(__assign$1({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign$1(__assign$1({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || DEFAULT_STORAGE_IMPLEMENTATION,\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        libraryInfo: __assign$1(__assign$1({}, DEFAULT_LIBRARY_INFO), libraryInfo)\r\n    };\r\n}\n\n/**\r\n * Access token cache item which is used to manage tokens and token renewal.\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The CacheHelpers class contains a set of helper functions used by the module to manage cache items.\r\n */\r\nvar CacheHelpers = /** @class */ (function () {\r\n    function CacheHelpers(cacheImpl) {\r\n        this.cacheStorage = cacheImpl;\r\n    }\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAcquireTokenAccountKey = function (accountId) {\r\n        return \"\" + TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.RESOURCE_DELIM + accountId;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.generateNonceKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.setAccountCache = function (account) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account && account.homeAccountIdentifier ? account.homeAccountIdentifier : Constants.NO_ACCOUNT;\r\n        var acquireTokenAccountKey = this.generateAcquireTokenAccountKey(accountId);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    CacheHelpers.prototype.setAuthorityCache = function (authority, state) {\r\n        // Cache authorityKey\r\n        var authorityKey = this.generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, authority.canonicalAuthority);\r\n    };\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    CacheHelpers.prototype.updateCacheEntries = function (serverAuthenticationRequest, account) {\r\n        // Cache account and state\r\n        if (account) {\r\n            this.setAccountCache(account);\r\n        }\r\n        // Cache the request state\r\n        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_STATE, serverAuthenticationRequest.state);\r\n        // Cache the nonce\r\n        this.cacheStorage.setItem(this.generateNonceKey(serverAuthenticationRequest.state), serverAuthenticationRequest.nonce);\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.authorityInstance, serverAuthenticationRequest.state);\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    CacheHelpers.prototype.resetTempCacheItems = function (state) {\r\n        var _this = this;\r\n        // check state and remove associated cache items\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                var splitKey = key.split(Constants.RESOURCE_DELIM);\r\n                var keyState = splitKey.length > 1 ? splitKey[splitKey.length - 1] : null;\r\n                if (keyState === state) {\r\n                    _this.cacheStorage.removeItem(key);\r\n                }\r\n            }\r\n        });\r\n        // delete generic interactive request parameters\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n        this.cacheStorage.removeItem(TemporaryCacheKeys.ORIGIN_URI);\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.getAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        var results = this.cacheStorage.getKeys().reduce(function (tokens, key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                var value = _this.cacheStorage.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var parseAtKey = JSON.parse(key);\r\n                        if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                            var newAccessTokenCacheItem = new AccessTokenCacheItem(parseAtKey, JSON.parse(value));\r\n                            return tokens.concat([newAccessTokenCacheItem]);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        throw ClientAuthError.createCacheParseError(key);\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Remove all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.removeAllAccessTokens = function (clientId, authority, resource, homeAccountIdentifier) {\r\n        var _this = this;\r\n        this.cacheStorage.getKeys().forEach(function (key) {\r\n            var keyMatches = key.match(clientId) && key.match(authority) && key.match(resource) && key.match(homeAccountIdentifier);\r\n            if (keyMatches) {\r\n                try {\r\n                    var parseAtKey = JSON.parse(key);\r\n                    if (_this.checkForExactKeyMatch(parseAtKey, clientId, authority, resource, homeAccountIdentifier)) {\r\n                        _this.cacheStorage.removeItem(key);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw ClientAuthError.createCacheParseError(key);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Checks that any parameters are exact matches for key value, since key.match in the above functions only do contains checks, not exact matches.\r\n     * @param atKey\r\n     * @param clientId\r\n     * @param authority\r\n     * @param resource\r\n     * @param homeAccountIdentifier\r\n     */\r\n    CacheHelpers.prototype.checkForExactKeyMatch = function (atKey, clientId, authority, resource, homeAccountIdentifier) {\r\n        var hasClientId = (atKey.clientId === clientId);\r\n        // If any inputs are empty, return true so we don't fail the check.\r\n        var hasAuthorityUri = StringUtils.isEmpty(authority) || (atKey.authority === authority);\r\n        var hasResourceUri = StringUtils.isEmpty(resource) || (atKey.resource === resource);\r\n        var hasHomeAccountId = StringUtils.isEmpty(homeAccountIdentifier) || (atKey.homeAccountIdentifier === homeAccountIdentifier);\r\n        return hasClientId && hasAuthorityUri && hasResourceUri && hasHomeAccountId;\r\n    };\r\n    return CacheHelpers;\r\n}());\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"one_of_code_challenge_code_challenge_method_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    b2cKnownAuthoritiesNotSet: {\r\n        code: \"b2c_known_authorities_not_set\",\r\n        desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. If using B2C, please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends$1(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes B2C authority and does not set knownAuthorities\r\n     */\r\n    ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = this.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.prototype.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !url.endsWith(\"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.prototype.getDeserializedHash = function () {\r\n        var hash = this.getHash();\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = urlString.getDeserializedHash();\r\n        return !!(parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getOpenIdConfigurationEndpointAsync()];\r\n                    case 1:\r\n                        openIdConfigEndpoint = _a.sent();\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.tenantDiscoveryResponse = response.body;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Aad\"] = 0] = \"Aad\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n    AuthorityType[AuthorityType[\"B2C\"] = 2] = \"B2C\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/**\r\n * The AadAuthority class extends the Authority class and adds functionality specific to the Azure AD OAuth Authority.\r\n */\r\nvar AadAuthority = /** @class */ (function (_super) {\r\n    __extends$1(AadAuthority, _super);\r\n    function AadAuthority(authority, networkInterface) {\r\n        return _super.call(this, authority, networkInterface) || this;\r\n    }\r\n    Object.defineProperty(AadAuthority.prototype, \"authorityType\", {\r\n        // Set authority type to AAD\r\n        get: function () {\r\n            return AuthorityType.Aad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AadAuthority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return Constants.AAD_INSTANCE_DISCOVERY_ENDPT + \"?api-version=1.0&authorization_endpoint=\" + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    AadAuthority.prototype.getOpenIdConfigurationEndpointAsync = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.isInTrustedHostList(this.canonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                            return [2 /*return*/, this.defaultOpenIdConfigurationEndpoint];\r\n                        }\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(this.aadInstanceDiscoveryEndpointUrl)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, response.body.tenant_discovery_endpoint];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    AadAuthority.prototype.isInTrustedHostList = function (host) {\r\n        return AADTrustedHostList.includes(host);\r\n    };\r\n    return AadAuthority;\r\n}(Authority));\n\n/**\r\n * The B2CAuthority class extends the Authority class and adds functionality specific to B2C Authorities.\r\n */\r\nvar B2cAuthority = /** @class */ (function (_super) {\r\n    __extends$1(B2cAuthority, _super);\r\n    function B2cAuthority(authority, networkInterface) {\r\n        return _super.call(this, authority, networkInterface) || this;\r\n    }\r\n    /**\r\n     * Use when Authority is B2C to provide list of trusted/allowed domains.\r\n     */\r\n    B2cAuthority.setKnownAuthorities = function (knownAuthorities) {\r\n        if (B2cAuthority.B2CTrustedHostList.length === 0) {\r\n            knownAuthorities.forEach(function (authority) {\r\n                B2cAuthority.B2CTrustedHostList.push(authority);\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(B2cAuthority.prototype, \"authorityType\", {\r\n        // Set authority type to B2C\r\n        get: function () {\r\n            return AuthorityType.B2C;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    B2cAuthority.prototype.getOpenIdConfigurationEndpointAsync = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                if (this.isInTrustedHostList(this.canonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n                    return [2 /*return*/, this.defaultOpenIdConfigurationEndpoint];\r\n                }\r\n                throw ClientConfigurationError.createUntrustedAuthorityError();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param {string} The host to look up\r\n     */\r\n    B2cAuthority.prototype.isInTrustedHostList = function (host) {\r\n        return B2cAuthority.B2CTrustedHostList.indexOf(host) > -1;\r\n    };\r\n    B2cAuthority.B2CTrustedHostList = [];\r\n    return B2cAuthority;\r\n}(Authority));\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Parse the url and determine the type of authority\r\n     */\r\n    AuthorityFactory.detectAuthorityFromUrl = function (authorityString) {\r\n        var authorityUrl = new UrlString(authorityString);\r\n        var components = authorityUrl.getUrlComponents();\r\n        var pathSegments = components.PathSegments;\r\n        if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS)\r\n            return AuthorityType.Adfs;\r\n        else if (Object.keys(B2cAuthority.B2CTrustedHostList).length)\r\n            return AuthorityType.B2C;\r\n        // defaults to Aad\r\n        return AuthorityType.Aad;\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        var type = AuthorityFactory.detectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, networkInterface);\r\n            case AuthorityType.B2C:\r\n                return new B2cAuthority(authorityUrl, networkInterface);\r\n            // TODO: Support ADFS here in a later PR\r\n            default:\r\n                throw ClientAuthError.createInvalidAuthorityTypeError(\"\" + authorityUrl);\r\n        }\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheStorage = this.config.storageInterface;\r\n        // Initialize storage helper object\r\n        this.cacheManager = new CacheHelpers(this.cacheStorage);\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Default authority instance.\r\n        this.defaultAuthorityInstance = AuthorityFactory.createInstance(this.config.authOptions.authority || Constants.DEFAULT_AUTHORITY, this.networkClient);\r\n    }\r\n    /**\r\n     * Create authority instance if not set already, resolve well-known-endpoint\r\n     * @param authorityString\r\n     */\r\n    BaseClient.prototype.createAuthority = function (authorityString) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var authority;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        authority = authorityString\r\n                            ? AuthorityFactory.createInstance(authorityString, this.networkClient)\r\n                            : this.defaultAuthorityInstance;\r\n                        return [4 /*yield*/, authority.resolveEndpointsAsync().catch(function (error) {\r\n                                throw ClientAuthError.createEndpointDiscoveryIncompleteError(error);\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, authority];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\r\n        var headers = this.createDefaultLibraryHeaders();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * addLibraryData\r\n     */\r\n    BaseClient.prototype.createDefaultLibraryHeaders = function () {\r\n        var headers = new Map();\r\n        // client info headers\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\r\n        return this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n            body: queryString,\r\n            headers: headers,\r\n        });\r\n    };\r\n    return BaseClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes, clientId, scopesRequired) {\r\n        this.clientId = clientId;\r\n        this.scopesRequired = scopesRequired;\r\n        // Filter empty string and null/undefined array items\r\n        var filteredInput = inputScopes && StringUtils.removeEmptyStringsFromArray(inputScopes);\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        var scopeArr = filteredInput ? StringUtils.trimAndConvertArrayEntriesToLowerCase(__spreadArrays(filteredInput)) : [];\r\n        this.scopes = new Set(scopeArr);\r\n        if (!this.scopesRequired) {\r\n            this.appendScope(this.clientId);\r\n        }\r\n        this.originalScopes = new Set(this.scopes);\r\n        this.replaceDefaultScopes();\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n    */\r\n    ScopeSet.fromString = function (inputScopeString, appClientId, scopesRequired) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes, appClientId, scopesRequired);\r\n    };\r\n    /**\r\n     * Replace client id with the default scopes used for token acquisition.\r\n     */\r\n    ScopeSet.prototype.replaceDefaultScopes = function () {\r\n        if (this.scopes.has(this.clientId)) {\r\n            this.removeScope(this.clientId);\r\n            this.appendScope(Constants.OPENID_SCOPE);\r\n            this.appendScope(Constants.PROFILE_SCOPE);\r\n        }\r\n        this.appendScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n    */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        if (this.scopesRequired) {\r\n            // Check if scopes are required but not given or is an empty array\r\n            if (!inputScopes || inputScopes.length < 1) {\r\n                throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n            }\r\n        }\r\n        // Check that scopes is an array object\r\n        if (!Array.isArray(inputScopes)) {\r\n            throw ClientConfigurationError.createScopesNonArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (StringUtils.isEmpty(newScope)) {\r\n            throw ClientAuthError.createAppendEmptyScopeToSetError(newScope);\r\n        }\r\n        this.scopes.add(newScope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        try {\r\n            var newScopeSet = new ScopeSet(newScopes, this.clientId, this.scopesRequired);\r\n            this.scopes = this.unionScopeSets(newScopeSet);\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        return new Set(__spreadArrays(otherScopes.asArray(), Array.from(this.scopes)));\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        // Do not allow offline_access to be the only intersecting scope\r\n        var sizeOtherScopes = otherScopes.containsScope(Constants.OFFLINE_ACCESS_SCOPE) ? otherScopes.getScopeCount() - 1 : otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.containsScope(Constants.OFFLINE_ACCESS_SCOPE) ? this.getScopeCount() - 1 : this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.has(Constants.OFFLINE_ACCESS_SCOPE) ? unionScopes.size - 1 : unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns true if the set of original scopes only contained client-id\r\n     */\r\n    ScopeSet.prototype.isLoginScopeSet = function () {\r\n        var hasLoginScopes = this.originalScopes.has(this.clientId) ||\r\n            this.originalScopes.has(Constants.OPENID_SCOPE) ||\r\n            this.originalScopes.has(Constants.PROFILE_SCOPE);\r\n        return this.originalScopes && hasLoginScopes;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        return Array.from(this.scopes);\r\n    };\r\n    /**\r\n     * Returns the original scopes as an array (no extra scopes to consent)\r\n     */\r\n    ScopeSet.prototype.getOriginalScopesAsArray = function () {\r\n        return Array.from(this.originalScopes);\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (userState, randomGuid) {\r\n        return !StringUtils.isEmpty(userState) ? \"\" + randomGuid + Constants.RESOURCE_DELIM + userState : randomGuid;\r\n    };\r\n    /**\r\n     *\r\n     * Extracts user state value from the state sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ProtocolUtils.getUserRequestState = function (serverResponseState) {\r\n        if (!StringUtils.isEmpty(serverResponseState)) {\r\n            var splitIndex = serverResponseState.indexOf(Constants.RESOURCE_DELIM);\r\n            if (splitIndex > -1 && splitIndex + 1 < serverResponseState.length) {\r\n                return serverResponseState.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * This class extends the ServerRequestParameters class. This class validates URL request parameters, checks for SSO and generates required URL.\r\n */\r\nvar ServerCodeRequestParameters = /** @class */ (function () {\r\n    function ServerCodeRequestParameters(authority, clientId, userRequest, cachedAccount, redirectUri, cryptoImpl, isLoginCall) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.authorityInstance = authority;\r\n        this.userRequest = userRequest;\r\n        this.responseType = Constants.CODE_RESPONSE_TYPE;\r\n        this.account = (userRequest && userRequest.account) || cachedAccount;\r\n        // Set scopes, append extra scopes if there is a login call.\r\n        this.scopes = new ScopeSet((this.userRequest && this.userRequest.scopes) || [], this.clientId, !isLoginCall);\r\n        if (isLoginCall) {\r\n            this.appendExtraScopes();\r\n        }\r\n        // Set random vars\r\n        var randomGuid = this.cryptoObj.createNewGuid();\r\n        this.state = ProtocolUtils.setRequestState(this.userRequest && this.userRequest.userRequestState, randomGuid);\r\n        this.nonce = this.cryptoObj.createNewGuid();\r\n        this.correlationId = this.userRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Appends extraScopesToConsent if passed\r\n     */\r\n    ServerCodeRequestParameters.prototype.appendExtraScopes = function () {\r\n        if (this.userRequest && this.scopes) {\r\n            if (this.userRequest.extraScopesToConsent) {\r\n                this.scopes.appendScopes(this.userRequest.extraScopesToConsent);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.hasSSOParam = function () {\r\n        var isSSORequest = this.userRequest && (this.account || this.userRequest.sid || this.userRequest.loginHint);\r\n        return !!this.account || !!isSSORequest;\r\n    };\r\n    /**\r\n     * Adds SSO parameter to query parameters:\r\n     * - sid of the account object used to identify the session of the user on the service\r\n     * - login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     */\r\n    ServerCodeRequestParameters.prototype.addSSOQueryParameters = function (adalIdToken) {\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        // preference order: account > sid > login_hint\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.sid > account.login_hint\r\n        if (this.account) {\r\n            // sid can only be passed if prompt = none\r\n            if (this.account.sid && this.userRequest && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.account.sid;\r\n            }\r\n            else if (this.account.userName) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.account.userName;\r\n            }\r\n        }\r\n        // if no account info available, request.sid > request.login_hint\r\n        else if (this.userRequest) {\r\n            // sid from request - can only be passed if prompt = none\r\n            if (this.userRequest.sid && this.userRequest.prompt === PromptValue.NONE) {\r\n                serverReqParam[SSOTypes.SID] = this.userRequest.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (this.userRequest.loginHint) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = this.userRequest.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        if (adalIdToken && StringUtils.isEmpty(serverReqParam[SSOTypes.SID]) && StringUtils.isEmpty(serverReqParam[SSOTypes.LOGIN_HINT])) {\r\n            if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                serverReqParam[SSOTypes.LOGIN_HINT] = adalIdToken.claims.upn;\r\n            }\r\n        }\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param adalIdTokenObject\r\n     */\r\n    ServerCodeRequestParameters.prototype.populateQueryParams = function (adalIdTokenObject) {\r\n        var queryParameters = {};\r\n        if (this.userRequest) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (this.userRequest.prompt) {\r\n                this.validatePromptParameter(this.userRequest.prompt);\r\n            }\r\n        }\r\n        /*\r\n         * adds sid/login_hint if an SSO Parameter is available\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        if (this.hasSSOParam() || adalIdTokenObject) {\r\n            queryParameters = this.addSSOQueryParameters(adalIdTokenObject);\r\n        }\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams;\r\n        if (this.userRequest) {\r\n            eQParams = this.sanitizeEQParams(this.userRequest, queryParameters);\r\n        }\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = this.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = this.generateQueryParametersString(eQParams);\r\n    };\r\n    /**\r\n     * Create navigation url.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createNavigateUrl = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var paramStrings, authEndpoint, requestUrl;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createParamString()];\r\n                    case 1:\r\n                        paramStrings = _a.sent();\r\n                        authEndpoint = this.authorityInstance.authorizationEndpoint;\r\n                        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n                        if (authEndpoint.indexOf(\"?\") < 0) {\r\n                            authEndpoint += \"?\";\r\n                        }\r\n                        else {\r\n                            authEndpoint += \"&\";\r\n                        }\r\n                        requestUrl = \"\" + authEndpoint + paramStrings.join(\"&\");\r\n                        return [2 /*return*/, requestUrl];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a query parameter string.\r\n     */\r\n    ServerCodeRequestParameters.prototype.createParamString = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var str, _a;\r\n            return __generator$1(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        str = [];\r\n                        str.push(AADServerParamKeys.RESPONSE_TYPE + \"=\" + this.responseType);\r\n                        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n                        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n                        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n                        str.push(AADServerParamKeys.STATE + \"=\" + encodeURIComponent(this.state));\r\n                        str.push(AADServerParamKeys.NONCE + \"=\" + encodeURIComponent(this.nonce));\r\n                        str.push(AADServerParamKeys.CLIENT_INFO + \"=1\");\r\n                        str.push(AADServerParamKeys.X_CLIENT_SKU + \"=\" + this.xClientSku);\r\n                        str.push(AADServerParamKeys.X_CLIENT_VER + \"=\" + this.xClientVer);\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.cryptoObj.generatePkceCodes()];\r\n                    case 1:\r\n                        // Add codes here. May want to add optional step to allow for non-PKCE auth code flows\r\n                        _a.generatedPkce = _b.sent();\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE + \"=\" + encodeURIComponent(this.generatedPkce.challenge));\r\n                        str.push(AADServerParamKeys.CODE_CHALLENGE_METHOD + \"=\" + Constants.S256_CODE_CHALLENGE_METHOD);\r\n                        // Append resource\r\n                        if (this.userRequest && this.userRequest.resource) {\r\n                            str.push(AADServerParamKeys.RESOURCE + \"=\" + encodeURIComponent(this.userRequest.resource));\r\n                        }\r\n                        // Append prompt\r\n                        if (this.userRequest && this.userRequest.prompt) {\r\n                            str.push(AADServerParamKeys.PROMPT + \"=\" + (encodeURIComponent(this.userRequest.prompt)));\r\n                        }\r\n                        // Append query params\r\n                        if (this.queryParameters) {\r\n                            str.push(this.queryParameters);\r\n                        }\r\n                        // Append extra query params\r\n                        if (this.extraQueryParameters) {\r\n                            str.push(this.extraQueryParameters);\r\n                        }\r\n                        str.push(AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(this.correlationId));\r\n                        str.push(AADServerParamKeys.RESPONSE_MODE + \"=\" + Constants.FRAGMENT_RESPONSE_MODE);\r\n                        return [2 /*return*/, str];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Utility to test if valid prompt value is passed in the request\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.validatePromptParameter = function (prompt) {\r\n        if ([PromptValue.LOGIN, PromptValue.SELECT_ACCOUNT, PromptValue.CONSENT, PromptValue.NONE].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    ServerCodeRequestParameters.prototype.sanitizeEQParams = function (request, ssoQueryParams) {\r\n        var eQParams = request.extraQueryParameters;\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        // Remove any query parameters that are blacklisted\r\n        BlacklistedEQParams.forEach(function (param) {\r\n            if (eQParams[param]) {\r\n                // TODO: this.logger.error(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n                delete eQParams[param];\r\n            }\r\n        });\r\n        // Remove any query parameters already included in SSO params\r\n        Object.keys(ssoQueryParams).forEach(function (key) {\r\n            if (eQParams[key]) {\r\n                // TODO: this.logger.error(\"Removed param \" + key + \" from extraQueryParameters since it was already present in library query parameters.\")\r\n                delete eQParams[key];\r\n            }\r\n            if (key === SSOTypes.SID) {\r\n                // TODO: this.logger.error(\"Removed domain hint since sid was provided.\")\r\n                delete eQParams[SSOTypes.DOMAIN_HINT];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerCodeRequestParameters.prototype.generateQueryParametersString = function (queryParameters) {\r\n        var paramsString = \"\";\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                if (StringUtils.isEmpty(paramsString)) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    return ServerCodeRequestParameters;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class extends the ServerRequestParameters class. This class validates token request parameters and generates a form body and headers required for the request.\r\n */\r\nvar ServerTokenRequestParameters = /** @class */ (function () {\r\n    function ServerTokenRequestParameters(clientId, tokenRequest, codeResponse, redirectUri, cryptoImpl, refreshToken) {\r\n        this.clientId = clientId;\r\n        this.cryptoObj = cryptoImpl;\r\n        this.redirectUri = redirectUri;\r\n        // Telemetry Info\r\n        this.xClientSku = Constants.LIBRARY_NAME;\r\n        this.xClientVer = pkg.version;\r\n        this.tokenRequest = tokenRequest;\r\n        this.codeResponse = codeResponse;\r\n        this.refreshToken = refreshToken;\r\n        // Set scopes, always required for token request/exchange\r\n        this.scopes = new ScopeSet((this.tokenRequest && this.tokenRequest.scopes) || [], this.clientId, true);\r\n        // Set correlation id\r\n        this.correlationId = this.tokenRequest.correlationId || this.cryptoObj.createNewGuid();\r\n    }\r\n    /**\r\n     * Creates headers required for token request.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestHeaders = function () {\r\n        var headers = new Map();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Creates string of parameters to send to server in request body.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createRequestBody = function () {\r\n        var paramString = this.createParamString();\r\n        return paramString.join(\"&\");\r\n    };\r\n    /**\r\n     * Helper creates an array of key value string pairs.\r\n     */\r\n    ServerTokenRequestParameters.prototype.createParamString = function () {\r\n        var str = [];\r\n        str.push(AADServerParamKeys.CLIENT_ID + \"=\" + encodeURIComponent(this.clientId));\r\n        str.push(AADServerParamKeys.SCOPE + \"=\" + encodeURIComponent(this.scopes.printScopes()));\r\n        str.push(AADServerParamKeys.REDIRECT_URI + \"=\" + encodeURIComponent(this.redirectUri));\r\n        // If there is a code response or refresh token, push relevant variables. Throw error otherwise.\r\n        if (this.codeResponse) {\r\n            str.push(AADServerParamKeys.CODE + \"=\" + encodeURIComponent(this.codeResponse.code));\r\n            str.push(AADServerParamKeys.CODE_VERIFIER + \"=\" + encodeURIComponent(this.tokenRequest.codeVerifier));\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.CODE_GRANT_TYPE);\r\n        }\r\n        else if (!StringUtils.isEmpty(this.refreshToken)) {\r\n            str.push(AADServerParamKeys.REFRESH_TOKEN + \"=\" + this.refreshToken);\r\n            str.push(AADServerParamKeys.GRANT_TYPE + \"=\" + Constants.RT_GRANT_TYPE);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n        }\r\n        return str;\r\n    };\r\n    return ServerTokenRequestParameters;\r\n}());\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(JSON.stringify(err));\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nvar Account = /** @class */ (function () {\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    function Account(accountIdentifier, homeAccountIdentifier, idTokenClaims, rawIdToken) {\r\n        this.accountIdentifier = accountIdentifier;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n        this.userName = idTokenClaims.preferred_username;\r\n        this.name = idTokenClaims.name;\r\n        // will be deprecated soon\r\n        this.idToken = rawIdToken;\r\n        this.idTokenClaims = idTokenClaims;\r\n        this.sid = idTokenClaims.sid;\r\n        this.environment = idTokenClaims.iss;\r\n    }\r\n    /**\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    Account.createAccount = function (idToken, clientInfo, crypto) {\r\n        // create accountIdentifier\r\n        var accountIdentifier = idToken.claims.oid || idToken.claims.sub;\r\n        // create homeAccountIdentifier\r\n        var uid = clientInfo ? clientInfo.uid : \"\";\r\n        var utid = clientInfo ? clientInfo.utid : \"\";\r\n        var homeAccountIdentifier;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            homeAccountIdentifier = crypto.base64Encode(uid) + \".\" + crypto.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.claims, idToken.rawIdToken);\r\n    };\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    Account.compareAccounts = function (a1, a2) {\r\n        if (!(a1 && a1.homeAccountIdentifier) || !(a2 && a2.homeAccountIdentifier)) {\r\n            return false;\r\n        }\r\n        return a1.homeAccountIdentifier === a2.homeAccountIdentifier;\r\n    };\r\n    return Account;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/**\r\n * Key to cache access tokens, id tokens, and refresh tokens. Helps manage token renewal.\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, resource, uid, utid, cryptoObj) {\r\n        var authorityUri = new UrlString(authority);\r\n        this.authority = authorityUri.urlString;\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.resource = resource;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            this.homeAccountIdentifier = cryptoObj.base64Encode(uid) + \".\" + cryptoObj.base64Encode(utid);\r\n        }\r\n    }\r\n    return AccessTokenKey;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Value of access token cache item which is stored in cache. Helps manage token renewal.\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(tokenType, accessToken, idToken, refreshToken, expiresOn, extExpiresOn) {\r\n        this.tokenType = tokenType;\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.refreshToken = refreshToken;\r\n        this.expiresOnSec = expiresOn;\r\n        this.extExpiresOnSec = extExpiresOn;\r\n    }\r\n    return AccessTokenValue;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends$1(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        _this.subError = subError;\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends$1(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cacheManager, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cacheManager = cacheManager;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns a new response with the data from original response filled with the relevant IdToken data.\r\n     * - raw id token\r\n     * - id token claims\r\n     * - unique id (oid or sub claim of token)\r\n     * - tenant id (tid claim of token)\r\n     * @param originalResponse\r\n     * @param idTokenObj\r\n     */\r\n    ResponseHandler.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var expiresSeconds = Number(idTokenObj.claims.exp);\r\n        if (expiresSeconds && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(expiresSeconds * 1000);\r\n        }\r\n        return __assign$1(__assign$1({}, originalResponse), { idToken: idTokenObj.rawIdToken, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub, tenantId: idTokenObj.claims.tid });\r\n    };\r\n    /**\r\n     * Validates and handles a response from the server, and returns a constructed object with the authorization code and state.\r\n     * @param serverParams\r\n     */\r\n    ResponseHandler.prototype.handleServerCodeResponse = function (serverParams) {\r\n        try {\r\n            // Validate hash fragment response parameters\r\n            this.validateServerAuthorizationCodeResponse(serverParams, this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE), this.cryptoObj);\r\n            // Cache client info\r\n            if (serverParams.client_info) {\r\n                this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, serverParams.client_info);\r\n            }\r\n            // Create response object\r\n            var response = {\r\n                code: serverParams.code,\r\n                userRequestState: serverParams.state\r\n            };\r\n            return response;\r\n        }\r\n        catch (e) {\r\n            this.cacheManager.resetTempCacheItems(serverParams && serverParams.state);\r\n            throw e;\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (serverResponseHash.state !== cachedState) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n    };\r\n    /**\r\n     * Helper function which saves or updates the token in the cache and constructs the final token response to send back to the user.\r\n     * @param originalTokenResponse\r\n     * @param authority\r\n     * @param resource\r\n     * @param serverTokenResponse\r\n     * @param clientInfo\r\n     */\r\n    ResponseHandler.prototype.saveToken = function (originalTokenResponse, authority, resource, serverTokenResponse, clientInfo) {\r\n        var _this = this;\r\n        // Set consented scopes in response\r\n        var responseScopes = ScopeSet.fromString(serverTokenResponse.scope, this.clientId, true);\r\n        var responseScopeArray = responseScopes.asArray();\r\n        // Expiration calculation\r\n        var expiresIn = serverTokenResponse.expires_in;\r\n        var expirationSec = TimeUtils.nowSeconds() + expiresIn;\r\n        var extendedExpirationSec = expirationSec + serverTokenResponse.ext_expires_in;\r\n        // Get id token\r\n        if (!StringUtils.isEmpty(originalTokenResponse.idToken)) {\r\n            this.cacheStorage.setItem(PersistentCacheKeys.ID_TOKEN, originalTokenResponse.idToken);\r\n        }\r\n        // Save access token in cache\r\n        var newAccessTokenValue = new AccessTokenValue(serverTokenResponse.token_type, serverTokenResponse.access_token, originalTokenResponse.idToken, serverTokenResponse.refresh_token, expirationSec.toString(), extendedExpirationSec.toString());\r\n        var homeAccountIdentifier = originalTokenResponse.account && originalTokenResponse.account.homeAccountIdentifier;\r\n        var accessTokenCacheItems = this.cacheManager.getAllAccessTokens(this.clientId, authority || \"\", resource || \"\", homeAccountIdentifier || \"\");\r\n        // If no items in cache with these parameters, set new item.\r\n        if (accessTokenCacheItems.length < 1) {\r\n            this.logger.info(\"No tokens found, creating new item.\");\r\n        }\r\n        else {\r\n            // Check if scopes are intersecting. If they are, combine scopes and replace cache item.\r\n            accessTokenCacheItems.forEach(function (accessTokenCacheItem) {\r\n                var cachedScopes = ScopeSet.fromString(accessTokenCacheItem.key.scopes, _this.clientId, true);\r\n                if (cachedScopes.intersectingScopeSets(responseScopes)) {\r\n                    _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                    responseScopes.appendScopes(cachedScopes.asArray());\r\n                    if (StringUtils.isEmpty(newAccessTokenValue.idToken)) {\r\n                        newAccessTokenValue.idToken = accessTokenCacheItem.value.idToken;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        var newTokenKey = new AccessTokenKey(authority, this.clientId, responseScopes.printScopes(), resource, clientInfo && clientInfo.uid, clientInfo && clientInfo.utid, this.cryptoObj);\r\n        this.cacheStorage.setItem(JSON.stringify(newTokenKey), JSON.stringify(newAccessTokenValue));\r\n        // Save tokens in response and return\r\n        return __assign$1(__assign$1({}, originalTokenResponse), { tokenType: serverTokenResponse.token_type, scopes: responseScopeArray, accessToken: serverTokenResponse.access_token, refreshToken: serverTokenResponse.refresh_token, expiresOn: new Date(expirationSec * 1000) });\r\n    };\r\n    /**\r\n     * Gets account cached with given key. Returns null if parsing could not be completed.\r\n     * @param accountKey\r\n     */\r\n    ResponseHandler.prototype.getCachedAccount = function (accountKey) {\r\n        try {\r\n            return JSON.parse(this.cacheStorage.getItem(accountKey));\r\n        }\r\n        catch (e) {\r\n            this.logger.warning(\"Account could not be parsed: \" + JSON.stringify(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authorityString\r\n     * @param resource\r\n     * @param state\r\n     */\r\n    ResponseHandler.prototype.createTokenResponse = function (serverTokenResponse, authorityString, resource, state) {\r\n        var tokenResponse = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: \"\",\r\n            refreshToken: \"\",\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            userRequestState: \"\"\r\n        };\r\n        // Retrieve current id token object\r\n        var idTokenObj;\r\n        var cachedIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n            // If state is empty, refresh token is being used\r\n            if (!StringUtils.isEmpty(state)) {\r\n                this.logger.info(\"State was detected - nonce should be available.\");\r\n                // check nonce integrity if refresh token is not used - throw an error if not matched\r\n                if (StringUtils.isEmpty(idTokenObj.claims.nonce)) {\r\n                    throw ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n                }\r\n                var nonce = this.cacheStorage.getItem(this.cacheManager.generateNonceKey(state));\r\n                if (idTokenObj.claims.nonce !== nonce) {\r\n                    throw ClientAuthError.createNonceMismatchError();\r\n                }\r\n            }\r\n        }\r\n        else if (cachedIdToken) {\r\n            idTokenObj = new IdToken(cachedIdToken, this.cryptoObj);\r\n            tokenResponse = ResponseHandler.setResponseIdToken(tokenResponse, idTokenObj);\r\n        }\r\n        else {\r\n            idTokenObj = null;\r\n        }\r\n        var clientInfo = null;\r\n        var cachedAccount = null;\r\n        if (idTokenObj) {\r\n            // Retrieve client info\r\n            clientInfo = buildClientInfo(this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO), this.cryptoObj);\r\n            // Create account object for request\r\n            tokenResponse.account = Account.createAccount(idTokenObj, clientInfo, this.cryptoObj);\r\n            // Save the access token if it exists\r\n            var accountKey = this.cacheManager.generateAcquireTokenAccountKey(tokenResponse.account.homeAccountIdentifier);\r\n            // Get cached account\r\n            cachedAccount = this.getCachedAccount(accountKey);\r\n        }\r\n        // Return user set state in the response\r\n        tokenResponse.userRequestState = ProtocolUtils.getUserRequestState(state);\r\n        this.cacheManager.resetTempCacheItems(state);\r\n        if (!cachedAccount || !tokenResponse.account || Account.compareAccounts(cachedAccount, tokenResponse.account)) {\r\n            return this.saveToken(tokenResponse, authorityString, resource, serverTokenResponse, clientInfo);\r\n        }\r\n        else {\r\n            this.logger.error(\"Accounts do not match.\");\r\n            this.logger.errorPii(\"Cached Account: \" + JSON.stringify(cachedAccount) + \", New Account: \" + JSON.stringify(tokenResponse.account));\r\n            throw ClientAuthError.createAccountMismatchError();\r\n        }\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * SPAClient class\r\n *\r\n * Object instance which will construct requests to send to and handle responses\r\n * from the Microsoft STS using the authorization code flow.\r\n */\r\nvar SPAClient = /** @class */ (function (_super) {\r\n    __extends$1(SPAClient, _super);\r\n    function SPAClient(configuration) {\r\n        var _this = \r\n        // Implement base module\r\n        _super.call(this, configuration) || this;\r\n        B2cAuthority.setKnownAuthorities(_this.config.authOptions.knownAuthorities);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a url for logging in a user. This will by default append the client id to the list of scopes,\r\n     * allowing you to retrieve an id token in the subsequent code exchange. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    SPAClient.prototype.createLoginUrl = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a url for logging in a user. Also performs validation of the request parameters.\r\n     * Including any SSO parameters (account, sid, login_hint) will short circuit the authentication and allow you to retrieve a code without interaction.\r\n     * @param request\r\n     */\r\n    SPAClient.prototype.createAcquireTokenUrl = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                return [2 /*return*/, this.createUrl(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function which creates URL. If isLoginCall is true, MSAL appends client id scope to retrieve id token from the service.\r\n     * @param request\r\n     * @param isLoginCall\r\n     */\r\n    SPAClient.prototype.createUrl = function (request, isLoginCall) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1, requestParameters, adalIdToken, adalIdTokenString, urlNavigate, tokenRequest, e_2;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        requestParameters = new ServerCodeRequestParameters(acquireTokenAuthority, this.config.authOptions.clientId, request, this.getAccount(), this.getRedirectUri(), this.cryptoUtils, isLoginCall);\r\n                        adalIdToken = null;\r\n                        if (!requestParameters.hasSSOParam()) {\r\n                            adalIdTokenString = this.cacheStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                                adalIdToken = new IdToken(adalIdTokenString, this.cryptoUtils);\r\n                                this.cacheStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                            }\r\n                        }\r\n                        // Update required cache entries for request.\r\n                        this.cacheManager.updateCacheEntries(requestParameters, request.account);\r\n                        // Populate query parameters (sid/login_hint/domain_hint) and any other extraQueryParameters set by the developer.\r\n                        requestParameters.populateQueryParams(adalIdToken);\r\n                        return [4 /*yield*/, requestParameters.createNavigateUrl()];\r\n                    case 5:\r\n                        urlNavigate = _a.sent();\r\n                        tokenRequest = {\r\n                            scopes: requestParameters.scopes.getOriginalScopesAsArray(),\r\n                            resource: request.resource,\r\n                            codeVerifier: requestParameters.generatedPkce.verifier,\r\n                            extraQueryParameters: request.extraQueryParameters,\r\n                            authority: requestParameters.authorityInstance.canonicalAuthority,\r\n                            correlationId: requestParameters.correlationId\r\n                        };\r\n                        this.cacheStorage.setItem(TemporaryCacheKeys.REQUEST_PARAMS, this.cryptoUtils.base64Encode(JSON.stringify(tokenRequest)));\r\n                        return [2 /*return*/, urlNavigate];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        // Reset cache items before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(requestParameters && requestParameters.state);\r\n                        throw e_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given an authorization code, it will perform a token exchange using cached values from a previous call to\r\n     * createLoginUrl() or createAcquireTokenUrl(). You must call this AFTER using one of those APIs first. You should\r\n     * also use the handleFragmentResponse() API to pass the codeResponse to this function afterwards.\r\n     * @param codeResponse\r\n     */\r\n    SPAClient.prototype.acquireToken = function (codeResponse) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var tokenRequest, acquireTokenAuthority, e_3, tokenEndpoint, tokenReqParams, e_4;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 6, , 7]);\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!codeResponse || StringUtils.isEmpty(codeResponse.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        tokenRequest = this.getCachedRequest(codeResponse.userRequestState);\r\n                        acquireTokenAuthority = (tokenRequest && tokenRequest.authority) ? AuthorityFactory.createInstance(tokenRequest.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_3);\r\n                    case 4:\r\n                        tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.config.authOptions.clientId, tokenRequest, codeResponse, this.getRedirectUri(), this.cryptoUtils);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, tokenRequest, codeResponse)];\r\n                    case 5: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems(codeResponse && codeResponse.userRequestState);\r\n                        this.account = null;\r\n                        throw e_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token. Will throw an error if login is not completed (unless\r\n     * id tokens are not being renewed).\r\n     * @param request\r\n     */\r\n    SPAClient.prototype.getValidToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var account, requestScopes, acquireTokenAuthority, e_5, cachedTokenItem, expirationSec, offsetCurrentTimeSec, cachedScopes, defaultTokenResponse, tokenEndpoint, e_6;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 5, , 6]);\r\n                        // Cannot renew token if no request object is given.\r\n                        if (!request) {\r\n                            throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                        }\r\n                        account = request.account || this.getAccount();\r\n                        requestScopes = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, true);\r\n                        // If this is an id token renewal, and no account is present, throw an error.\r\n                        if (requestScopes.isLoginScopeSet()) {\r\n                            if (!account) {\r\n                                throw ClientAuthError.createUserLoginRequiredError();\r\n                            }\r\n                        }\r\n                        acquireTokenAuthority = request.authority ? AuthorityFactory.createInstance(request.authority, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_5 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_5);\r\n                    case 4:\r\n                        cachedTokenItem = this.getCachedTokens(requestScopes, acquireTokenAuthority.canonicalAuthority, request.resource, account && account.homeAccountIdentifier);\r\n                        expirationSec = Number(cachedTokenItem.value.expiresOnSec);\r\n                        offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds;\r\n                        // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\r\n                        if (!request.forceRefresh && expirationSec && expirationSec > offsetCurrentTimeSec) {\r\n                            cachedScopes = ScopeSet.fromString(cachedTokenItem.key.scopes, this.config.authOptions.clientId, true);\r\n                            defaultTokenResponse = {\r\n                                uniqueId: \"\",\r\n                                tenantId: \"\",\r\n                                scopes: cachedScopes.asArray(),\r\n                                tokenType: cachedTokenItem.value.tokenType,\r\n                                idToken: \"\",\r\n                                idTokenClaims: null,\r\n                                accessToken: cachedTokenItem.value.accessToken,\r\n                                refreshToken: cachedTokenItem.value.refreshToken,\r\n                                expiresOn: new Date(expirationSec * 1000),\r\n                                account: account,\r\n                                userRequestState: \"\"\r\n                            };\r\n                            // Only populate id token if it exists in cache item.\r\n                            return [2 /*return*/, StringUtils.isEmpty(cachedTokenItem.value.idToken) ? defaultTokenResponse :\r\n                                    ResponseHandler.setResponseIdToken(defaultTokenResponse, new IdToken(cachedTokenItem.value.idToken, this.cryptoUtils))];\r\n                        }\r\n                        else {\r\n                            // Renew the tokens.\r\n                            request.authority = cachedTokenItem.key.authority;\r\n                            tokenEndpoint = acquireTokenAuthority.tokenEndpoint;\r\n                            return [2 /*return*/, this.renewToken(request, tokenEndpoint, cachedTokenItem.value.refreshToken)];\r\n                        }\r\n                    case 5:\r\n                        e_6 = _a.sent();\r\n                        // Reset cache items and set account to null before re-throwing.\r\n                        this.cacheManager.resetTempCacheItems();\r\n                        this.account = null;\r\n                        throw e_6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    SPAClient.prototype.logout = function (authorityUri) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var currentAccount, homeAccountIdentifier, postLogoutRedirectUri, acquireTokenAuthority, e_7, logoutUri;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentAccount = this.getAccount();\r\n                        homeAccountIdentifier = currentAccount ? currentAccount.homeAccountIdentifier : \"\";\r\n                        // Remove all pertinent access tokens.\r\n                        this.cacheManager.removeAllAccessTokens(this.config.authOptions.clientId, authorityUri, \"\", homeAccountIdentifier);\r\n                        // Clear remaining cache items.\r\n                        this.cacheStorage.clear();\r\n                        // Clear current account.\r\n                        this.account = null;\r\n                        postLogoutRedirectUri = \"\";\r\n                        try {\r\n                            postLogoutRedirectUri = \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n                        }\r\n                        catch (e) { }\r\n                        acquireTokenAuthority = (authorityUri) ? AuthorityFactory.createInstance(authorityUri, this.networkClient) : this.defaultAuthorityInstance;\r\n                        if (!!acquireTokenAuthority.discoveryComplete()) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_7 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_7);\r\n                    case 4:\r\n                        logoutUri = \"\" + acquireTokenAuthority.endSessionEndpoint + postLogoutRedirectUri;\r\n                        return [2 /*return*/, logoutUri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Response Handling\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    SPAClient.prototype.handleFragmentResponse = function (hashFragment) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheStorage, this.cacheManager, this.cryptoUtils, this.logger);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        var serverParams = hashUrlString.getDeserializedHash();\r\n        // Get code response\r\n        return responseHandler.handleServerCodeResponse(serverParams);\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     * Clears cache of items related to current request.\r\n     */\r\n    SPAClient.prototype.cancelRequest = function () {\r\n        var cachedState = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_STATE);\r\n        this.cacheManager.resetTempCacheItems(cachedState || \"\");\r\n    };\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    SPAClient.prototype.getCachedRequest = function (state) {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            var encodedTokenRequest = this.cacheStorage.getItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            var parsedRequest = JSON.parse(this.cryptoUtils.base64Decode(encodedTokenRequest));\r\n            this.cacheStorage.removeItem(TemporaryCacheKeys.REQUEST_PARAMS);\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                var authorityKey = this.cacheManager.generateAuthorityKey(state);\r\n                var cachedAuthority = this.cacheStorage.getItem(authorityKey);\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    };\r\n    /**\r\n     * Gets all cached tokens based on the given criteria.\r\n     * @param requestScopes\r\n     * @param authorityUri\r\n     * @param resourceId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    SPAClient.prototype.getCachedTokens = function (requestScopes, authorityUri, resourceId, homeAccountIdentifier) {\r\n        var _this = this;\r\n        // Get all access tokens with matching authority, resource id and home account ID\r\n        var tokenCacheItems = this.cacheManager.getAllAccessTokens(this.config.authOptions.clientId, authorityUri || \"\", resourceId || \"\", homeAccountIdentifier || \"\");\r\n        if (tokenCacheItems.length === 0) {\r\n            throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n        }\r\n        // Filter cache items based on available scopes.\r\n        var filteredCacheItems = tokenCacheItems.filter(function (cacheItem) {\r\n            var cachedScopes = ScopeSet.fromString(cacheItem.key.scopes, _this.config.authOptions.clientId, true);\r\n            return cachedScopes.containsScopeSet(requestScopes);\r\n        });\r\n        // If cache items contains too many matching tokens, throw error.\r\n        if (filteredCacheItems.length > 1) {\r\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError(requestScopes.printScopes());\r\n        }\r\n        else if (filteredCacheItems.length === 1) {\r\n            // Return single cache item.\r\n            return filteredCacheItems[0];\r\n        }\r\n        // If cache items are empty, throw error.\r\n        throw ClientAuthError.createNoTokensFoundError(requestScopes.printScopes());\r\n    };\r\n    /**\r\n     * Makes a request to the token endpoint with the given parameters and parses the response.\r\n     * @param tokenEndpoint\r\n     * @param tokenReqParams\r\n     * @param tokenRequest\r\n     * @param codeResponse\r\n     */\r\n    SPAClient.prototype.getTokenResponse = function (tokenEndpoint, tokenReqParams, tokenRequest, codeResponse) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var acquiredTokenResponse, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n                            body: tokenReqParams.createRequestBody(),\r\n                            headers: tokenReqParams.createRequestHeaders()\r\n                        })];\r\n                    case 1:\r\n                        acquiredTokenResponse = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheStorage, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateServerAuthorizationTokenResponse(acquiredTokenResponse.body);\r\n                        tokenResponse = responseHandler.createTokenResponse(acquiredTokenResponse.body, tokenRequest.authority, tokenRequest.resource, codeResponse && codeResponse.userRequestState);\r\n                        // Set current account to received response account, if any.\r\n                        this.account = tokenResponse.account;\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates refreshToken request and sends to given token endpoint.\r\n     * @param refreshTokenRequest\r\n     * @param tokenEndpoint\r\n     * @param refreshToken\r\n     */\r\n    SPAClient.prototype.renewToken = function (refreshTokenRequest, tokenEndpoint, refreshToken) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var tokenReqParams;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        tokenReqParams = new ServerTokenRequestParameters(this.config.authOptions.clientId, refreshTokenRequest, null, this.getRedirectUri(), this.cryptoUtils, refreshToken);\r\n                        return [4 /*yield*/, this.getTokenResponse(tokenEndpoint, tokenReqParams, refreshTokenRequest)];\r\n                    case 1: \r\n                    // User helper to retrieve token response.\r\n                    // Need to await function call before return to catch any thrown errors.\r\n                    // if errors are thrown asynchronously in return statement, they are caught by caller of this function instead.\r\n                    return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Getters and setters\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    SPAClient.prototype.getRedirectUri = function () {\r\n        if (this.config.authOptions.redirectUri) {\r\n            if (typeof this.config.authOptions.redirectUri === \"function\") {\r\n                return this.config.authOptions.redirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.config.authOptions.redirectUri)) {\r\n                return this.config.authOptions.redirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createRedirectUriEmptyError();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    SPAClient.prototype.getPostLogoutRedirectUri = function () {\r\n        if (this.config.authOptions.postLogoutRedirectUri) {\r\n            if (typeof this.config.authOptions.postLogoutRedirectUri === \"function\") {\r\n                return this.config.authOptions.postLogoutRedirectUri();\r\n            }\r\n            else if (!StringUtils.isEmpty(this.config.authOptions.postLogoutRedirectUri)) {\r\n                return this.config.authOptions.postLogoutRedirectUri;\r\n            }\r\n        }\r\n        // This should never throw unless window.location.href is returning empty.\r\n        throw ClientConfigurationError.createPostLogoutRedirectUriEmptyError();\r\n    };\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    SPAClient.prototype.getAccount = function () {\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // Get id token and client info from cache\r\n        var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.ID_TOKEN);\r\n        var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO);\r\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken(rawIdToken, this.cryptoUtils);\r\n            var clientInfo = buildClientInfo(rawClientInfo, this.cryptoUtils);\r\n            this.account = Account.createAccount(idToken, clientInfo, this.cryptoUtils);\r\n            return this.account;\r\n        }\r\n        // if login is not yet done, return null\r\n        return null;\r\n    };\r\n    return SPAClient;\r\n}(BaseClient));\n\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : Constants.QUERY_RESPONSE_MODE));\r\n    };\r\n    /**\r\n     * add scopes\r\n     * @param scopeSet\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims) {\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, codeVerifier);\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    // TODO uncomment when confidential client flow is added.\r\n    // addClientSecret(clientSecret: string): void {\r\n    //     params.set(`${AADServerParamKeys.CLIENT_SECRET}`, clientSecret);\r\n    // }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        if ([\r\n            PromptValue.LOGIN,\r\n            PromptValue.SELECT_ACCOUNT,\r\n            PromptValue.CONSENT,\r\n            PromptValue.NONE\r\n        ].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (!(codeChallenge && codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    return RequestValidator;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var authority, queryString;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createAuthority(request && request.authority)];\r\n                    case 1:\r\n                        authority = _a.sent();\r\n                        queryString = this.createAuthCodeUrlQueryString(request);\r\n                        return [2 /*return*/, authority.authorizationEndpoint + \"?\" + queryString];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var authority, response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        return [4 /*yield*/, this.createAuthority(request && request.authority)];\r\n                    case 1:\r\n                        authority = _a.sent();\r\n                        return [4 /*yield*/, this.executeTokenRequest(authority, request)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, JSON.stringify(response.body)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        // validate the redirectUri (to be a non null value)\r\n        RequestValidator.validateRedirectUri(request.redirectUri);\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        var scopeSet = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, false);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, false);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // validate the redirectUri (to be a non null value)\r\n        RequestValidator.validateRedirectUri(request.redirectUri);\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        if (request.codeChallenge) {\r\n            RequestValidator.validateCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.prompt) {\r\n            RequestValidator.validatePrompt(request.prompt);\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.loginHint) {\r\n            parameterBuilder.addLoginHint(request.loginHint);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.claims) {\r\n            parameterBuilder.addClaims(request.claims);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n */\r\nvar DeviceCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(DeviceCodeClient, _super);\r\n    function DeviceCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var _a, deviceCodeResponse, response;\r\n            return __generator$1(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.createAuthority(request.authority)];\r\n                    case 1:\r\n                        _a.authority = _b.sent();\r\n                        return [4 /*yield*/, this.getDeviceCode(request)];\r\n                    case 2:\r\n                        deviceCodeResponse = _b.sent();\r\n                        request.deviceCodeCallback(deviceCodeResponse);\r\n                        return [4 /*yield*/, this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // TODO handle response\r\n                        return [2 /*return*/, JSON.stringify(response)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.getDeviceCode = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var deviceCodeUrl, headers;\r\n            return __generator$1(this, function (_a) {\r\n                deviceCodeUrl = this.createDeviceCodeUrl(request);\r\n                headers = this.createDefaultLibraryHeaders();\r\n                return [2 /*return*/, this.executeGetRequestToDeviceCodeEndpoint(deviceCodeUrl, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes GET request to device code endpoint\r\n     * @param deviceCodeUrl\r\n     * @param headers\r\n     */\r\n    DeviceCodeClient.prototype.executeGetRequestToDeviceCodeEndpoint = function (deviceCodeUrl, headers) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\r\n            return __generator$1(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendGetRequestAsync(deviceCodeUrl, { headers: headers })];\r\n                    case 1:\r\n                        _a = (_b.sent()).body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\r\n                        return [2 /*return*/, {\r\n                                userCode: userCode,\r\n                                deviceCode: deviceCode,\r\n                                verificationUri: verificationUri,\r\n                                expiresIn: expiresIn,\r\n                                interval: interval,\r\n                                message: message\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create device code endpoint url\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.createDeviceCodeUrl = function (request) {\r\n        var queryString = this.createQueryString(request);\r\n        // TODO add device code endpoint to authority class\r\n        return \"\" + this.authority.canonicalAuthority + Constants.DEVICE_CODE_ENDPOINT_PATH + \"?\" + queryString;\r\n    };\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     */\r\n    DeviceCodeClient.prototype.createQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, false);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n     * response\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\r\n            var _this = this;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n                pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n                // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n                // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var intervalId = setInterval(function () { return __awaiter$1(_this, void 0, void 0, function () {\r\n                            var response, error_1;\r\n                            return __generator$1(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        _a.trys.push([0, 5, , 6]);\r\n                                        if (!request.cancel) return [3 /*break*/, 1];\r\n                                        this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeCancelledError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 1:\r\n                                        if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3 /*break*/, 2];\r\n                                        this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeExpiredError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 2: return [4 /*yield*/, this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\r\n                                    case 3:\r\n                                        response = _a.sent();\r\n                                        if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\r\n                                            // user authorization is pending. Sleep for polling interval and try again\r\n                                            this.logger.info(response.body.error_description);\r\n                                        }\r\n                                        else {\r\n                                            clearInterval(intervalId);\r\n                                            resolve(response.body);\r\n                                        }\r\n                                        _a.label = 4;\r\n                                    case 4: return [3 /*break*/, 6];\r\n                                    case 5:\r\n                                        error_1 = _a.sent();\r\n                                        clearInterval(intervalId);\r\n                                        reject(error_1);\r\n                                        return [3 /*break*/, 6];\r\n                                    case 6: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, pollingIntervalMilli);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\r\n        var requestParameters = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, true);\r\n        requestParameters.addScopes(scopeSet);\r\n        requestParameters.addClientId(this.config.authOptions.clientId);\r\n        requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\r\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\r\n        return requestParameters.createQueryString();\r\n    };\r\n    return DeviceCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends$1(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var authority, response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createAuthority(request.authority)];\r\n                    case 1:\r\n                        authority = _a.sent();\r\n                        return [4 /*yield*/, this.executeTokenRequest(request, authority)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        // TODO add response_handler here to send the response\r\n                        return [2 /*return*/, JSON.stringify(response.body)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || [], this.config.authOptions.clientId, true);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nvar BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Invalid grant error code\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POLL_INTERVAL_MS: 50,\r\n    // msal-browser SKU\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nvar HTTP_REQUEST_TYPE;\r\n(function (HTTP_REQUEST_TYPE) {\r\n    HTTP_REQUEST_TYPE[\"GET\"] = \"GET\";\r\n    HTTP_REQUEST_TYPE[\"POST\"] = \"POST\";\r\n})(HTTP_REQUEST_TYPE || (HTTP_REQUEST_TYPE = {}));\n\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, fetch(url, {\r\n                            method: HTTP_REQUEST_TYPE.GET,\r\n                            headers: this.getFetchHeaders(options)\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqBody, response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        reqBody = (options && options.body) || \"\";\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: HTTP_REQUEST_TYPE.POST,\r\n                                headers: this.getFetchHeaders(options),\r\n                                body: reqBody\r\n                            })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders\r\n     */\r\n    FetchClient.prototype.getFetchHeaders = function (options) {\r\n        var headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach(function (value, key) {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    };\r\n    FetchClient.prototype.getHeaderMap = function (headers) {\r\n        var headerMap = new Map();\r\n        headers.forEach(function (value, key) {\r\n            headerMap.set(key, value);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return FetchClient;\r\n}());\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorWindowTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a login_hint, sid or account object.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    }\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserAuthError, _super);\r\n    function BrowserAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, BrowserAuthError.prototype);\r\n        _this.name = \"BrowserAuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    BrowserAuthError.createNoWindowObjectError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    BrowserAuthError.createEmptyNavigationUriError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    BrowserAuthError.createEmptyHashError = function (hashValue) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    BrowserAuthError.createInteractionInProgressError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createEmptyWindowCreatedError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    BrowserAuthError.createUserCancelledError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate\r\n     */\r\n    BrowserAuthError.createMonitorWindowTimeoutError = function (urlNavigate) {\r\n        var errorMessage = \"URL navigated to is \" + urlNavigate + \", \" + BrowserAuthErrorMessage.monitorWindowTimeoutError.desc;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code, errorMessage);\r\n    };\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck\r\n     */\r\n    BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    BrowserAuthError.createIframeClosedPrematurelyError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\r\n    };\r\n    return BrowserAuthError;\r\n}(AuthError));\n\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url\r\n     * @param method\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            _this.setXhrHeaders(xhr, options);\r\n            xhr.onload = function () {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    var jsonResponse = JSON.parse(xhr.responseText);\r\n                    var networkResponse = {\r\n                        headers: _this.getHeaderMap(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                }\r\n                catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            }\r\n            else if (method === \"GET\") {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.setXhrHeaders = function (xhr, options) {\r\n        if (options && options.headers) {\r\n            options.headers.forEach(function (value, key) {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     *\r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr\r\n     */\r\n    XhrClient.prototype.getHeaderMap = function (xhr) {\r\n        var headerString = xhr.getAllResponseHeaders();\r\n        var headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        var headerMap = new Map();\r\n        headerArr.forEach(function (value) {\r\n            var parts = value.split(\": \");\r\n            var headerName = parts.shift();\r\n            var headerVal = parts.join(\": \");\r\n            headerMap.set(headerName, headerVal);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return XhrClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nvar BrowserUtils = /** @class */ (function () {\r\n    function BrowserUtils() {\r\n    }\r\n    // #region Window Navigation and URL management\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    BrowserUtils.navigateWindow = function (urlNavigate, noHistory) {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        }\r\n        else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    };\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    BrowserUtils.clearHash = function () {\r\n        window.location.hash = \"\";\r\n    };\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    BrowserUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    BrowserUtils.getCurrentUri = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Returns best compatible network client object.\r\n     */\r\n    BrowserUtils.getBrowserNetworkClient = function () {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        }\r\n        else {\r\n            return new XhrClient();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if we have completed an auth and are\r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    BrowserUtils.blockReloadInHiddenIframes = function () {\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    BrowserUtils.detectIEOrEdge = function () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n        var msie11 = ua.indexOf(\"Trident/\");\r\n        var msedge = ua.indexOf(\"Edge/\");\r\n        var isIE = msie > 0 || msie11 > 0;\r\n        var isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    };\r\n    return BrowserUtils;\r\n}());\n\n// Default timeout for popup windows and iframes in milliseconds\r\nvar DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nvar DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\n// Default auth options for browser\r\nvar DEFAULT_AUTH_OPTIONS$1 = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    redirectUri: function () { return BrowserUtils.getCurrentUri(); },\r\n    postLogoutRedirectUri: function () { return BrowserUtils.getCurrentUri(); },\r\n    navigateToLoginRequestUrl: true\r\n};\r\n// Default cache options for browser\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n// Default logger options for browser\r\nvar DEFAULT_LOGGER_OPTIONS = {\r\n    loggerCallback: function (level, message, containsPii) {\r\n        if (containsPii) {\r\n            return;\r\n        }\r\n        switch (level) {\r\n            case LogLevel.Error:\r\n                console.error(message);\r\n                return;\r\n            case LogLevel.Info:\r\n                console.info(message);\r\n                return;\r\n            case LogLevel.Verbose:\r\n                console.debug(message);\r\n                return;\r\n            case LogLevel.Warning:\r\n                console.warn(message);\r\n                return;\r\n        }\r\n    },\r\n    piiLoggingEnabled: false\r\n};\r\n// Default system options for browser\r\nvar DEFAULT_BROWSER_SYSTEM_OPTIONS = __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), { loggerOptions: DEFAULT_LOGGER_OPTIONS, networkClient: BrowserUtils.getBrowserNetworkClient(), windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS, iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS, loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0 });\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nfunction buildConfiguration(_a) {\r\n    var userInputAuth = _a.auth, userInputCache = _a.cache, userInputSystem = _a.system;\r\n    var overlayedConfig = {\r\n        auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS$1), userInputAuth),\r\n        cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userInputCache),\r\n        system: __assign(__assign({}, DEFAULT_BROWSER_SYSTEM_OPTIONS), userInputSystem)\r\n    };\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserConfigurationAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserConfigurationAuthError, _super);\r\n    function BrowserConfigurationAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation\r\n     */\r\n    BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\r\n    };\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject\r\n     */\r\n    BrowserConfigurationAuthError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code, BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    return BrowserConfigurationAuthError;\r\n}(AuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nvar COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(clientId, cacheConfig) {\r\n        // Validate cache location\r\n        this.validateWindowStorage(cacheConfig.cacheLocation);\r\n        this.cacheConfig = cacheConfig;\r\n        this.windowStorage = window[this.cacheConfig.cacheLocation];\r\n        this.clientId = clientId;\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        this.migrateCacheEntries();\r\n    }\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation\r\n     */\r\n    BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        var storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    };\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntries = function () {\r\n        var _this = this;\r\n        var idTokenKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ID_TOKEN;\r\n        var clientInfoKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.CLIENT_INFO;\r\n        var errorKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR;\r\n        var errorDescKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR_DESC;\r\n        var idTokenValue = this.getItem(idTokenKey);\r\n        var clientInfoValue = this.getItem(clientInfoKey);\r\n        var errorValue = this.getItem(errorKey);\r\n        var errorDescValue = this.getItem(errorDescKey);\r\n        var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        var keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n        keysToMigrate.forEach(function (cacheKey, index) { return _this.migrateCacheEntry(cacheKey, values[index]); });\r\n    };\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntry = function (newKey, value) {\r\n        if (value) {\r\n            this.setItem(newKey, value);\r\n        }\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    BrowserStorage.prototype.generateCacheKey = function (key) {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (key.startsWith(\"\" + Constants.CACHE_PREFIX) || key.startsWith(PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return Constants.CACHE_PREFIX + \".\" + this.clientId + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.validateObjectKey = function (key) {\r\n        JSON.parse(key);\r\n    };\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value) {\r\n        var msalKey = this.generateCacheKey(key);\r\n        this.windowStorage.setItem(msalKey, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.setItemCookie(msalKey, value);\r\n        }\r\n    };\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key) {\r\n        var msalKey = this.generateCacheKey(key);\r\n        var itemCookie = this.getItemCookie(msalKey);\r\n        if (this.cacheConfig.storeAuthStateInCookie && itemCookie) {\r\n            return itemCookie;\r\n        }\r\n        return this.windowStorage.getItem(msalKey);\r\n    };\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        var msalKey = this.generateCacheKey(key);\r\n        this.windowStorage.removeItem(msalKey);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(msalKey);\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.containsKey = function (key) {\r\n        var msalKey = this.generateCacheKey(key);\r\n        return this.windowStorage.hasOwnProperty(msalKey) || this.windowStorage.hasOwnProperty(key);\r\n    };\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    BrowserStorage.prototype.getKeys = function () {\r\n        return Object.keys(this.windowStorage);\r\n    };\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        var key;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && (key.indexOf(Constants.CACHE_PREFIX) !== -1) && (key.indexOf(this.clientId) !== -1)) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cookieName, cookieValue, expires) {\r\n        var cookieStr = cookieName + \"=\" + cookieValue + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cookieName) {\r\n        var name = cookieName + \"=\";\r\n        var cookieList = document.cookie.split(\";\");\r\n        for (var i = 0; i < cookieList.length; i++) {\r\n            var cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return cookie.substring(name.length, cookie.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cookieName) {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    };\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    BrowserStorage.prototype.clearMsalCookie = function (state) {\r\n        var nonceKey = state ? TemporaryCacheKeys.NONCE_IDTOKEN + \"|\" + state : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    };\r\n    return BrowserStorage;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nvar MathUtils = /** @class */ (function () {\r\n    function MathUtils() {\r\n    }\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    MathUtils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    return MathUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar GuidGenerator = /** @class */ (function () {\r\n    function GuidGenerator(cryptoObj) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    GuidGenerator.prototype.generateGuid = function () {\r\n        try {\r\n            var buffer = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    GuidGenerator.isGuid = function (guid) {\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    };\r\n    return GuidGenerator;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar BrowserStringUtils = /** @class */ (function () {\r\n    function BrowserStringUtils() {\r\n    }\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr\r\n     */\r\n    BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\r\n        var nChr;\r\n        var nArrLen = 0;\r\n        var nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n        var aBytes = new Uint8Array(nArrLen);\r\n        /* transcription... */\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            }\r\n            else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes\r\n     */\r\n    BrowserStringUtils.utf8ArrToString = function (aBytes) {\r\n        var sView = \"\";\r\n        for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                    (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                        (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                            (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart);\r\n        }\r\n        return sView;\r\n    };\r\n    return BrowserStringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Encode = /** @class */ (function () {\r\n    function Base64Encode() {\r\n    }\r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.urlEncode = function (input) {\r\n        return this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr\r\n     */\r\n    Base64Encode.prototype.urlEncodeArr = function (inputArr) {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.encode = function (input) {\r\n        var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(encodeURIComponent(input));\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes\r\n     */\r\n    Base64Encode.prototype.base64EncArr = function (aBytes) {\r\n        var eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        var sB64Enc = \"\";\r\n        for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    };\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6\r\n     */\r\n    Base64Encode.prototype.uint6ToB64 = function (nUint6) {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                                65;\r\n    };\r\n    return Base64Encode;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Decode = /** @class */ (function () {\r\n    function Base64Decode() {\r\n    }\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input\r\n     */\r\n    Base64Decode.prototype.decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        var inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    };\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String\r\n     * @param nBlockSize\r\n     */\r\n    Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\r\n        var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        var nInLen = sB64Enc.length;\r\n        var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        var aBytes = new Uint8Array(nOutLen);\r\n        for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum\r\n     */\r\n    Base64Decode.prototype.b64ToUint6 = function (charNum) {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ?\r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                                0;\r\n    };\r\n    return Base64Decode;\r\n}());\n\n// Charset to generate values from\r\nvar CV_CHARSET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\r\n// Constant byte array length\r\nvar RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nvar PkceGenerator = /** @class */ (function () {\r\n    function PkceGenerator(cryptoObj) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    PkceGenerator.prototype.generateCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var codeVerifier, codeChallenge;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        codeVerifier = this.generateCodeVerifier();\r\n                        return [4 /*yield*/, this.generateCodeChallengeFromVerifier(codeVerifier)];\r\n                    case 1:\r\n                        codeChallenge = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                verifier: codeVerifier,\r\n                                challenge: codeChallenge\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    PkceGenerator.prototype.generateCodeVerifier = function () {\r\n        try {\r\n            // Generate random values as utf-8\r\n            var buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // verifier as string\r\n            var pkceCodeVerifierString = this.bufferToCVString(buffer);\r\n            // encode verifier as base64\r\n            var pkceCodeVerifierB64 = this.base64Encode.urlEncode(pkceCodeVerifierString);\r\n            return pkceCodeVerifierB64;\r\n        }\r\n        catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    PkceGenerator.prototype.generateCodeChallengeFromVerifier = function (pkceCodeVerifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pkceHashedCodeVerifier, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.cryptoObj.sha256Digest(pkceCodeVerifier)];\r\n                    case 1:\r\n                        pkceHashedCodeVerifier = _a.sent();\r\n                        // encode hash as base64\r\n                        return [2 /*return*/, this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier))];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        throw BrowserAuthError.createPkceNotGeneratedError(e_1);\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a character string based on input array.\r\n     * @param buffer\r\n     */\r\n    PkceGenerator.prototype.bufferToCVString = function (buffer) {\r\n        var charArr = [];\r\n        for (var i = 0; i < buffer.byteLength; i += 1) {\r\n            var index = buffer[i] % CV_CHARSET.length;\r\n            charArr.push(CV_CHARSET[index]);\r\n        }\r\n        return charArr.join(\"\");\r\n    };\r\n    return PkceGenerator;\r\n}());\n\n// SHA-256 hashing algorithm\r\nvar HASH_ALG = \"SHA-256\";\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nvar BrowserCrypto = /** @class */ (function () {\r\n    function BrowserCrypto() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString\r\n     */\r\n    BrowserCrypto.prototype.sha256Digest = function (dataString) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return __generator(this, function (_a) {\r\n                data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n                return [2 /*return*/, this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer\r\n     */\r\n    BrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        var cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    };\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    BrowserCrypto.prototype.hasIECrypto = function () {\r\n        return !!window[\"msCrypto\"];\r\n    };\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    BrowserCrypto.prototype.hasBrowserCrypto = function () {\r\n        return !!window.crypto;\r\n    };\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    BrowserCrypto.prototype.hasCryptoAPI = function () {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getSubtleCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.crypto.subtle.digest(algorithm, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getMSCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n                        digestOperation.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        digestOperation.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return BrowserCrypto;\r\n}());\n\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nvar CryptoOps = /** @class */ (function () {\r\n    function CryptoOps() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    CryptoOps.prototype.createNewGuid = function () {\r\n        return this.guidGenerator.generateGuid();\r\n    };\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Encode = function (input) {\r\n        return this.b64Encode.encode(input);\r\n    };\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Decode = function (input) {\r\n        return this.b64Decode.decode(input);\r\n    };\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    CryptoOps.prototype.generatePkceCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.pkceGenerator.generateCodes()];\r\n            });\r\n        });\r\n    };\r\n    return CryptoOps;\r\n}());\n\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nvar InteractionHandler = /** @class */ (function () {\r\n    function InteractionHandler(authCodeModule, storageImpl) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    InteractionHandler.prototype.handleCodeResponse = function (locationHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var codeResponse;\r\n            return __generator(this, function (_a) {\r\n                // Check that location hash isn't empty.\r\n                if (StringUtils.isEmpty(locationHash)) {\r\n                    throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                }\r\n                codeResponse = this.authModule.handleFragmentResponse(locationHash);\r\n                // Acquire token with retrieved code.\r\n                return [2 /*return*/, this.authModule.acquireToken(codeResponse)];\r\n            });\r\n        });\r\n    };\r\n    return InteractionHandler;\r\n}());\n\nvar RedirectHandler = /** @class */ (function (_super) {\r\n    __extends(RedirectHandler, _super);\r\n    function RedirectHandler() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    RedirectHandler.prototype.initiateAuthRequest = function (requestUrl) {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(TemporaryCacheKeys.ORIGIN_URI, BrowserUtils.getCurrentUri());\r\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            var isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    };\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    RedirectHandler.prototype.handleCodeResponse = function (locationHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var codeResponse;\r\n            return __generator(this, function (_a) {\r\n                // Check that location hash isn't empty.\r\n                if (StringUtils.isEmpty(locationHash)) {\r\n                    throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                }\r\n                // Interaction is completed - remove interaction status.\r\n                this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n                codeResponse = this.authModule.handleFragmentResponse(locationHash);\r\n                // Hash was processed successfully - remove from cache\r\n                this.browserStorage.removeItem(TemporaryCacheKeys.URL_HASH);\r\n                // Acquire token with retrieved code.\r\n                return [2 /*return*/, this.authModule.acquireToken(codeResponse)];\r\n            });\r\n        });\r\n    };\r\n    return RedirectHandler;\r\n}(InteractionHandler));\n\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nvar PopupHandler = /** @class */ (function (_super) {\r\n    __extends(PopupHandler, _super);\r\n    function PopupHandler(authCodeModule, storageImpl) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        // Properly sets this reference for the unload event.\r\n        _this.unloadWindow = _this.unloadWindow.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    PopupHandler.prototype.initiateAuthRequest = function (requestUrl) {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(BrowserConstants.INTERACTION_STATUS_KEY, BrowserConstants.INTERACTION_IN_PROGRESS_VALUE);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    };\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param contentWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    PopupHandler.prototype.monitorWindowForHash = function (contentWindow, timeout, urlNavigate) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            var ticks = 0;\r\n            var intervalId = setInterval(function () {\r\n                if (contentWindow.closed) {\r\n                    // Window is closed\r\n                    _this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = contentWindow.location.hash;\r\n                    _this.cleanPopup(contentWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    _this.cleanPopup(contentWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError(urlNavigate));\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    PopupHandler.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    PopupHandler.prototype.unloadWindow = function (e) {\r\n        this.authModule.cancelRequest();\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    };\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    PopupHandler.prototype.cleanPopup = function (popupWindow) {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n    };\r\n    return PopupHandler;\r\n}(InteractionHandler));\n\nvar SilentHandler = /** @class */ (function (_super) {\r\n    __extends(SilentHandler, _super);\r\n    function SilentHandler(authCodeModule, storageImpl, configuredLoadFrameTimeout) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        _this.loadFrameTimeout = configuredLoadFrameTimeout;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    SilentHandler.prototype.initiateAuthRequest = function (requestUrl, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var frameName, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (StringUtils.isEmpty(requestUrl)) {\r\n                            // Throw error if request URL is empty.\r\n                            this.authModule.logger.info(\"Navigate url is empty\");\r\n                            throw BrowserAuthError.createEmptyNavigationUriError();\r\n                        }\r\n                        frameName = userRequestScopes ? \"msalTokenFrame\" + userRequestScopes : \"msalTokenFrame\";\r\n                        if (!this.loadFrameTimeout) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.loadFrame(requestUrl, frameName)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = this.loadFrameSync(requestUrl, frameName);\r\n                        _b.label = 3;\r\n                    case 3: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframeContentWindow\r\n     * @param timeout\r\n     * @param urlNavigate\r\n     */\r\n    SilentHandler.prototype.monitorFrameForHash = function (iframe, timeout, urlNavigate) {\r\n        var _this = this;\r\n        var contentWindow = iframe.contentWindow;\r\n        return new Promise(function (resolve, reject) {\r\n            var maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            var ticks = 0;\r\n            var intervalId = setInterval(function () {\r\n                if (contentWindow.closed) {\r\n                    // Window is closed\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createIframeClosedPrematurelyError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                /*\r\n                 * Always run clock for silent calls\r\n                 * as silent operations should be short,\r\n                 * and to ensure they always at worst timeout.\r\n                 */\r\n                ticks++;\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = contentWindow.location.hash;\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError(urlNavigate));\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.loadFrame = function (urlNavigate, frameName) {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                var frameHandle = _this.loadFrameSync(urlNavigate, frameName);\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe with name: \" + frameName);\r\n                    return;\r\n                }\r\n                resolve(frameHandle);\r\n            }, _this.loadFrameTimeout);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    SilentHandler.prototype.loadFrameSync = function (urlNavigate, frameName) {\r\n        var frameHandle = this.getHiddenIframe(frameName);\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n        }\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.getHiddenIframe = function (iframeId) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        var authFrame = document.getElementById(iframeId);\r\n        if (!authFrame) {\r\n            if (document.createElement &&\r\n                document.documentElement &&\r\n                (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                var ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                authFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                authFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n        return authFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    return SilentHandler;\r\n}(InteractionHandler));\n\nvar version$1 = \"2.0.0-beta.2\";\n\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nvar PublicClientApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    function PublicClientApplication(configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n        // Create auth module.\r\n        this.authModule = new SPAClient({\r\n            authOptions: this.config.auth,\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                telemetry: this.config.system.telemetry\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version$1,\r\n                cpu: \"\",\r\n                os: \"\"\r\n            }\r\n        });\r\n        // Check for hash and save response promise\r\n        this.tokenExchangePromise = this.handleRedirectResponse();\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * WARNING: This function will be deprecated soon.\r\n     * Process any redirect-related data and send back the success or error object.\r\n     * IMPORTANT: Please do not use this function when using the popup APIs, as it may break the response handling\r\n     * in the main window.\r\n     *\r\n     * @param {@link (AuthCallback:type)} authCallback - Callback which contains\r\n     * an AuthError object, containing error data from either the server\r\n     * or the library, depending on the origin of the error, or the AuthResponse object\r\n     * containing data from the server (returned with a null or non-blocking error).\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectCallback = function (authCallback) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenResponse, err_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        console.warn(\"handleRedirectCallback will be deprecated upon release of msal-browser@v2.0.0. Please transition to using handleRedirectPromise().\");\r\n                        // Check whether callback object was passed.\r\n                        if (!authCallback) {\r\n                            throw BrowserConfigurationAuthError.createInvalidCallbackObjectError(authCallback);\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.tokenExchangePromise];\r\n                    case 2:\r\n                        tokenResponse = _a.sent();\r\n                        if (tokenResponse) {\r\n                            authCallback(null, tokenResponse);\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        err_1 = _a.sent();\r\n                        authCallback(err_1);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @returns token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectPromise = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.tokenExchangePromise];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectResponse = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var hash, cachedHash, isResponseHash, loginRequestUrl, currentUrl;\r\n            return __generator(this, function (_a) {\r\n                hash = window.location.hash;\r\n                cachedHash = this.browserStorage.getItem(TemporaryCacheKeys.URL_HASH);\r\n                isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n                loginRequestUrl = this.browserStorage.getItem(TemporaryCacheKeys.ORIGIN_URI);\r\n                currentUrl = BrowserUtils.getCurrentUri();\r\n                if (loginRequestUrl === currentUrl) {\r\n                    // We don't need to navigate - check for hash and prepare to process\r\n                    if (isResponseHash) {\r\n                        BrowserUtils.clearHash();\r\n                        return [2 /*return*/, this.handleHash(hash)];\r\n                    }\r\n                    else {\r\n                        // Loaded page with no valid hash - pass in the value retrieved from cache, or null/empty string\r\n                        return [2 /*return*/, this.handleHash(cachedHash)];\r\n                    }\r\n                }\r\n                if (this.config.auth.navigateToLoginRequestUrl && isResponseHash && !BrowserUtils.isInIframe()) {\r\n                    // Returned from authority using redirect - need to perform navigation before processing response\r\n                    this.browserStorage.setItem(TemporaryCacheKeys.URL_HASH, hash);\r\n                    if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\r\n                        // Redirect to home page if login request url is null (real null or the string null)\r\n                        this.authModule.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                        BrowserUtils.navigateWindow(\"/\", true);\r\n                    }\r\n                    else {\r\n                        // Navigate to target url\r\n                        BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n                    }\r\n                    return [2 /*return*/, null];\r\n                }\r\n                if (!isResponseHash) {\r\n                    // Loaded page with no valid hash - pass in the value retrieved from cache, or null/empty string\r\n                    return [2 /*return*/, this.handleHash(cachedHash)];\r\n                }\r\n                if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                    // We don't need to navigate - check for hash and prepare to process\r\n                    BrowserUtils.clearHash();\r\n                    return [2 /*return*/, this.handleHash(hash)];\r\n                }\r\n                return [2 /*return*/, null];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if hash exists and handles in window. Otherwise, cancel any current requests and continue.\r\n     * @param responseHash\r\n     * @param interactionHandler\r\n     */\r\n    PublicClientApplication.prototype.handleHash = function (responseHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var interactionHandler;\r\n            return __generator(this, function (_a) {\r\n                interactionHandler = new RedirectHandler(this.authModule, this.browserStorage);\r\n                if (!StringUtils.isEmpty(responseHash)) {\r\n                    // Hash contains known properties - handle and return in callback\r\n                    return [2 /*return*/, interactionHandler.handleCodeResponse(responseHash)];\r\n                }\r\n                // There is no hash - assume we are in clean state and clear any current request data.\r\n                this.cleanRequest();\r\n                return [2 /*return*/, null];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    PublicClientApplication.prototype.loginRedirect = function (request) {\r\n        // Preflight request\r\n        this.preflightRequest();\r\n        try {\r\n            // Create redirect interaction handler.\r\n            var interactionHandler_1 = new RedirectHandler(this.authModule, this.browserStorage);\r\n            // Create login url, which will by default append the client id scope to the call.\r\n            this.authModule.createLoginUrl(request).then(function (navigateUrl) {\r\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                interactionHandler_1.initiateAuthRequest(navigateUrl);\r\n            });\r\n        }\r\n        catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenRedirect = function (request) {\r\n        // Preflight request\r\n        this.preflightRequest();\r\n        try {\r\n            // Create redirect interaction handler.\r\n            var interactionHandler_2 = new RedirectHandler(this.authModule, this.browserStorage);\r\n            // Create acquire token url.\r\n            this.authModule.createAcquireTokenUrl(request).then(function (navigateUrl) {\r\n                // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                interactionHandler_2.initiateAuthRequest(navigateUrl);\r\n            });\r\n        }\r\n        catch (e) {\r\n            this.cleanRequest();\r\n            throw e;\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.loginPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var navigateUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Preflight request\r\n                        this.preflightRequest();\r\n                        return [4 /*yield*/, this.authModule.createLoginUrl(request)];\r\n                    case 1:\r\n                        navigateUrl = _a.sent();\r\n                        // Acquire token with popup\r\n                        return [2 /*return*/, this.popupTokenHelper(navigateUrl)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var navigateUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Preflight request\r\n                        this.preflightRequest();\r\n                        return [4 /*yield*/, this.authModule.createAcquireTokenUrl(request)];\r\n                    case 1:\r\n                        navigateUrl = _a.sent();\r\n                        // Acquire token with popup\r\n                        return [2 /*return*/, this.popupTokenHelper(navigateUrl)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     */\r\n    PublicClientApplication.prototype.popupTokenHelper = function (navigateUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var interactionHandler, popupWindow, hash, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 3, , 4]);\r\n                        interactionHandler = new PopupHandler(this.authModule, this.browserStorage);\r\n                        popupWindow = interactionHandler.initiateAuthRequest(navigateUrl);\r\n                        return [4 /*yield*/, interactionHandler.monitorWindowForHash(popupWindow, this.config.system.windowHashTimeout, navigateUrl)];\r\n                    case 1:\r\n                        hash = _a.sent();\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponse(hash)];\r\n                    case 2: \r\n                    // Handle response from hash string.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        this.cleanRequest();\r\n                        throw e_1;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters.\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.ssoSilent = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentRequest, scopeString, navigateUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        // Check that we have some SSO data\r\n                        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && !request.account) {\r\n                            throw BrowserAuthError.createSilentSSOInsufficientInfoError();\r\n                        }\r\n                        // Check that prompt is set to none, throw error if it is set to anything else.\r\n                        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n                            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n                        }\r\n                        silentRequest = __assign(__assign({}, request), { prompt: PromptValue.NONE });\r\n                        scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n                        return [4 /*yield*/, this.authModule.createLoginUrl(silentRequest)];\r\n                    case 1:\r\n                        navigateUrl = _a.sent();\r\n                        return [2 /*return*/, this.silentTokenHelper(navigateUrl, scopeString)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<TokenResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenSilent = function (silentRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_2, isServerError, isInteractionRequiredError, isInvalidGrantError, tokenRequest, navigateUrl, scopeString;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 6]);\r\n                        return [4 /*yield*/, this.authModule.getValidToken(silentRequest)];\r\n                    case 2: \r\n                    // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_2 = _a.sent();\r\n                        isServerError = e_2 instanceof ServerError;\r\n                        isInteractionRequiredError = e_2 instanceof InteractionRequiredAuthError;\r\n                        isInvalidGrantError = (e_2.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n                        if (!(isServerError && isInvalidGrantError && !isInteractionRequiredError)) return [3 /*break*/, 5];\r\n                        tokenRequest = __assign(__assign({}, silentRequest), { prompt: PromptValue.NONE });\r\n                        return [4 /*yield*/, this.authModule.createAcquireTokenUrl(tokenRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n                        return [2 /*return*/, this.silentTokenHelper(navigateUrl, scopeString)];\r\n                    case 5: throw e_2;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    PublicClientApplication.prototype.silentTokenHelper = function (navigateUrl, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentHandler, msalFrame, hash, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        silentHandler = new SilentHandler(this.authModule, this.browserStorage, this.config.system.loadFrameTimeout);\r\n                        return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl, userRequestScopes)];\r\n                    case 1:\r\n                        msalFrame = _a.sent();\r\n                        return [4 /*yield*/, silentHandler.monitorFrameForHash(msalFrame, this.config.system.iframeHashTimeout, navigateUrl)];\r\n                    case 2:\r\n                        hash = _a.sent();\r\n                        return [4 /*yield*/, silentHandler.handleCodeResponse(hash)];\r\n                    case 3: \r\n                    // Handle response from hash string.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 4:\r\n                        e_3 = _a.sent();\r\n                        throw e_3;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    PublicClientApplication.prototype.logout = function () {\r\n        // create logout string and navigate user window to logout. Auth module will clear cache.\r\n        this.authModule.logout().then(function (logoutUri) {\r\n            BrowserUtils.navigateWindow(logoutUri);\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Getters and setters\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.getRedirectUri = function () {\r\n        return this.authModule.getRedirectUri();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    PublicClientApplication.prototype.getPostLogoutRedirectUri = function () {\r\n        return this.authModule.getPostLogoutRedirectUri();\r\n    };\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    PublicClientApplication.prototype.getAccount = function () {\r\n        return this.authModule.getAccount();\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     * Helper to check whether interaction is in progress.\r\n     */\r\n    PublicClientApplication.prototype.interactionInProgress = function () {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return this.browserStorage.getItem(BrowserConstants.INTERACTION_STATUS_KEY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    };\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     */\r\n    PublicClientApplication.prototype.preflightRequest = function () {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n    };\r\n    /**\r\n     * Helper to remove interaction status and remove tempoarary request data.\r\n     */\r\n    PublicClientApplication.prototype.cleanRequest = function () {\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(BrowserConstants.INTERACTION_STATUS_KEY);\r\n        this.authModule.cancelRequest();\r\n    };\r\n    return PublicClientApplication;\r\n}());\n\nexport { AuthError, AuthErrorMessage, BrowserAuthError, BrowserAuthErrorMessage, BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, InteractionRequiredAuthError, LogLevel, Logger, PublicClientApplication };\n//# sourceMappingURL=index.es.js.map\n","!function(e,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(\"microsoftTeams\",[],n):\"object\"==typeof exports?exports.microsoftTeams=n():e.microsoftTeams=n()}(window,function(){return function(e){var n={};function t(a){if(n[a])return n[a].exports;var s=n[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var s in e)t.d(a,s,function(n){return e[n]}.bind(null,s));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=8)}([function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=function(){function e(){}return e.initializeCalled=!1,e.initializeCompleted=!1,e.additionalValidOrigins=[],e.additionalValidOriginsRegexp=null,e.initializeCallbacks=[],e.isFramelessWindow=!1,e.parentMessageQueue=[],e.childMessageQueue=[],e.nextMessageId=0,e.handlers={},e.callbacks={},e.printCapabilityEnabled=!1,e}();n.GlobalVars=a},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(4),s=t(2),r=t(0),i=t(3);function o(e,n){return(!r.GlobalVars.currentWindow||e!==r.GlobalVars.currentWindow)&&(!!(r.GlobalVars.currentWindow&&r.GlobalVars.currentWindow.location&&n&&n===r.GlobalVars.currentWindow.location.origin)||!!(s.validOriginRegExp.test(n.toLowerCase())||r.GlobalVars.additionalValidOriginsRegexp&&r.GlobalVars.additionalValidOriginsRegexp.test(n.toLowerCase())))}function l(e,n){r.GlobalVars.parentWindow&&e!==r.GlobalVars.parentWindow?r.GlobalVars.childWindow&&e!==r.GlobalVars.childWindow||(r.GlobalVars.childWindow=e,r.GlobalVars.childOrigin=n):(r.GlobalVars.parentWindow=e,r.GlobalVars.parentOrigin=n),r.GlobalVars.parentWindow&&r.GlobalVars.parentWindow.closed&&(r.GlobalVars.parentWindow=null,r.GlobalVars.parentOrigin=null),r.GlobalVars.childWindow&&r.GlobalVars.childWindow.closed&&(r.GlobalVars.childWindow=null,r.GlobalVars.childOrigin=null),g(r.GlobalVars.parentWindow),g(r.GlobalVars.childWindow)}function u(e){if(\"id\"in e.data&&\"number\"==typeof e.data.id){var n=e.data,t=r.GlobalVars.callbacks[n.id];t&&(t.apply(null,n.args),delete r.GlobalVars.callbacks[n.id])}else if(\"func\"in e.data&&\"string\"==typeof e.data.func){n=e.data;var a=r.GlobalVars.handlers[n.func];a&&a.apply(this,n.args)}}function c(e){if(\"id\"in e.data&&\"func\"in e.data){var n=e.data,t=n.func?r.GlobalVars.handlers[n.func]:null;if(t){var a=t.apply(this,n.args);void 0!==a&&p(n.id,Array.isArray(a)?a:[a])}else{var s=b(n.func,n.args);r.GlobalVars.callbacks[s]=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];r.GlobalVars.childWindow&&p(n.id,e)}}}}function d(e){return e===r.GlobalVars.parentWindow?r.GlobalVars.parentMessageQueue:e===r.GlobalVars.childWindow?r.GlobalVars.childMessageQueue:[]}function f(e){return e===r.GlobalVars.parentWindow?r.GlobalVars.parentOrigin:e===r.GlobalVars.childWindow?r.GlobalVars.childOrigin:null}function g(e){for(var n=f(e),t=d(e);e&&n&&t.length>0;)e.postMessage(t.shift(),n)}function b(e,n){var t=r.GlobalVars.parentWindow,a=v(e,n);if(r.GlobalVars.isFramelessWindow)r.GlobalVars.currentWindow&&r.GlobalVars.currentWindow.nativeInterface&&r.GlobalVars.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(a));else{var s=f(t);t&&s?t.postMessage(a,s):d(t).push(a)}return a.id}function p(e,n){var t=r.GlobalVars.childWindow,a=V(e,n),s=f(t);t&&s&&t.postMessage(a,s)}function h(e,n){var t=r.GlobalVars.childWindow,a=G(e,n),s=f(t);t&&s?t.postMessage(a,s):d(t).push(a)}function v(e,n){return{id:r.GlobalVars.nextMessageId++,func:e,args:n||[]}}function V(e,n){return{id:e,args:n||[]}}function G(e,n){return{func:e,args:n||[]}}r.GlobalVars.handlers.themeChange=function(e){r.GlobalVars.themeChangeHandler&&r.GlobalVars.themeChangeHandler(e);r.GlobalVars.childWindow&&h(\"themeChange\",[e])},r.GlobalVars.handlers.fullScreenChange=function(e){r.GlobalVars.fullScreenChangeHandler&&r.GlobalVars.fullScreenChangeHandler(e)},r.GlobalVars.handlers.backButtonPress=function(){r.GlobalVars.backButtonPressHandler&&r.GlobalVars.backButtonPressHandler()||a.navigateBack()},r.GlobalVars.handlers.load=function(e){r.GlobalVars.loadHandler&&r.GlobalVars.loadHandler(e);r.GlobalVars.childWindow&&h(\"load\",[e])},r.GlobalVars.handlers.beforeUnload=function(){var e=function(){b(\"readyToUnload\",[])};r.GlobalVars.beforeUnloadHandler&&r.GlobalVars.beforeUnloadHandler(e)||e()},r.GlobalVars.handlers.changeSettings=function(){r.GlobalVars.changeSettingsHandler&&r.GlobalVars.changeSettingsHandler()},r.GlobalVars.handlers.startConversation=function(e,n,t,a){r.GlobalVars.onStartConversationHandler&&r.GlobalVars.onStartConversationHandler({subEntityId:e,conversationId:n,channelId:t,entityId:a})},r.GlobalVars.handlers.closeConversation=function(e,n,t,a){r.GlobalVars.onCloseConversationHandler&&r.GlobalVars.onCloseConversationHandler({subEntityId:e,conversationId:n,channelId:t,entityId:a})},n.ensureInitialized=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];if(!r.GlobalVars.initializeCalled)throw new Error(\"The library has not yet been initialized\");if(r.GlobalVars.frameContext&&e&&e.length>0){for(var t=!1,a=0;a<e.length;a++)if(e[a]===r.GlobalVars.frameContext){t=!0;break}if(!t)throw new Error(\"This call is not allowed in the '\"+r.GlobalVars.frameContext+\"' context\")}},n.processMessage=function(e){if(e&&e.data&&\"object\"==typeof e.data){var n=e.source||e.originalEvent&&e.originalEvent.source,t=e.origin||e.originalEvent&&e.originalEvent.origin;o(n,t)&&(l(n,t),n===r.GlobalVars.parentWindow?u(e):n===r.GlobalVars.childWindow&&c(e))}},n.handleParentMessage=u,n.processAdditionalValidOrigins=function(e){var n=r.GlobalVars.additionalValidOrigins.concat(e.filter(function(e){return\"string\"==typeof e&&s.userOriginUrlValidationRegExp.test(e)})),t={};n=n.filter(function(e){return!t[e]&&(t[e]=!0,!0)}),r.GlobalVars.additionalValidOrigins=n,r.GlobalVars.additionalValidOrigins.length>0?r.GlobalVars.additionalValidOriginsRegexp=i.generateRegExpFromUrls(r.GlobalVars.additionalValidOrigins):r.GlobalVars.additionalValidOriginsRegexp=null},n.waitForMessageQueue=function(e,n){var t=r.GlobalVars.currentWindow.setInterval(function(){0===d(e).length&&(clearInterval(t),n())},100)},n.sendMessageRequestToParent=b,n.sendMessageEventToChild=h},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(3);n.version=\"1.6.0\",n.validOrigins=[\"https://teams.microsoft.com\",\"https://teams.microsoft.us\",\"https://gov.teams.microsoft.us\",\"https://dod.teams.microsoft.us\",\"https://int.teams.microsoft.com\",\"https://devspaces.skype.com\",\"https://ssauth.skype.com\",\"https://local.teams.office.com\",\"https://local.teams.office.com:8080\",\"https://msft.spoppe.com\",\"https://*.sharepoint.com\",\"https://*.sharepoint-df.com\",\"https://*.sharepointonline.com\",\"https://outlook.office.com\",\"https://outlook-sdf.office.com\",\"https://*.teams.microsoft.com\"],n.frameContexts={settings:\"settings\",content:\"content\",authentication:\"authentication\",remove:\"remove\",task:\"task\"},n.validOriginRegExp=a.generateRegExpFromUrls(n.validOrigins),n.userOriginUrlValidationRegExp=/^https\\:\\/\\//},function(e,n,t){\"use strict\";function a(e){for(var n=\"^\",t=e.split(\".\"),a=0;a<t.length;a++)n+=(a>0?\"[.]\":\"\")+t[a].replace(\"*\",\"[^/^.]+\");return n+=\"$\"}Object.defineProperty(n,\"__esModule\",{value:!0}),n.generateRegExpFromUrls=function(e){for(var n=\"\",t=0;t<e.length;t++)n+=(0===t?\"\":\"|\")+a(e[t]);return new RegExp(n)},n.getGenericOnCompleteHandler=function(e){return function(n,t){if(!n)throw new Error(e||t)}}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(5),o=t(3),l=t(6);function u(e,n){if(!s.GlobalVars.initializeCalled){s.GlobalVars.initializeCalled=!0;var t=function(e){return a.processMessage(e)};s.GlobalVars.currentWindow=s.GlobalVars.currentWindow||window,s.GlobalVars.parentWindow=s.GlobalVars.currentWindow.parent!==s.GlobalVars.currentWindow.self?s.GlobalVars.currentWindow.parent:s.GlobalVars.currentWindow.opener,s.GlobalVars.parentWindow?s.GlobalVars.currentWindow.addEventListener(\"message\",t,!1):(s.GlobalVars.isFramelessWindow=!0,window.onNativeMessage=a.handleParentMessage);try{s.GlobalVars.parentOrigin=\"*\";var o=a.sendMessageRequestToParent(\"initialize\",[r.version]);s.GlobalVars.callbacks[o]=function(e,n){s.GlobalVars.frameContext=e,s.GlobalVars.hostClientType=n,s.GlobalVars.initializeCallbacks.forEach(function(e){return e()}),s.GlobalVars.initializeCallbacks=[],s.GlobalVars.initializeCompleted=!0}}finally{s.GlobalVars.parentOrigin=null}this._uninitialize=function(){s.GlobalVars.frameContext&&(d(null),f(null),g(null),p(null),b(null),l.logs.registerGetLogHandler(null)),s.GlobalVars.frameContext===r.frameContexts.settings&&i.settings.registerOnSaveHandler(null),s.GlobalVars.frameContext===r.frameContexts.remove&&i.settings.registerOnRemoveHandler(null),s.GlobalVars.isFramelessWindow||s.GlobalVars.currentWindow.removeEventListener(\"message\",t,!1),s.GlobalVars.initializeCalled=!1,s.GlobalVars.initializeCompleted=!1,s.GlobalVars.initializeCallbacks=[],s.GlobalVars.additionalValidOrigins=[],s.GlobalVars.parentWindow=null,s.GlobalVars.parentOrigin=null,s.GlobalVars.parentMessageQueue=[],s.GlobalVars.childWindow=null,s.GlobalVars.childOrigin=null,s.GlobalVars.childMessageQueue=[],s.GlobalVars.nextMessageId=0,s.GlobalVars.callbacks={},s.GlobalVars.frameContext=null,s.GlobalVars.hostClientType=null,s.GlobalVars.isFramelessWindow=!1}}Array.isArray(n)&&a.processAdditionalValidOrigins(n),e&&(s.GlobalVars.initializeCompleted?e():s.GlobalVars.initializeCallbacks.push(e))}function c(){window.print()}function d(e){a.ensureInitialized(),s.GlobalVars.themeChangeHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"themeChange\"])}function f(e){a.ensureInitialized(),s.GlobalVars.fullScreenChangeHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"fullScreen\"])}function g(e){a.ensureInitialized(),s.GlobalVars.backButtonPressHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"backButton\"])}function b(e){a.ensureInitialized(),s.GlobalVars.loadHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"load\"])}function p(e){a.ensureInitialized(),s.GlobalVars.beforeUnloadHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"beforeUnload\"])}function h(e){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"setFrameContext\",[e])}n.initialize=u,n._initialize=function(e){s.GlobalVars.currentWindow=e},n._uninitialize=function(){},n.enablePrintCapability=function(){s.GlobalVars.printCapabilityEnabled||(s.GlobalVars.printCapabilityEnabled=!0,a.ensureInitialized(),document.addEventListener(\"keydown\",function(e){(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(c(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())}))},n.print=c,n.getContext=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"getContext\");s.GlobalVars.callbacks[n]=e},n.registerOnThemeChangeHandler=d,n.registerFullScreenHandler=f,n.registerBackButtonHandler=g,n.navigateBack=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"navigateBack\",[]);s.GlobalVars.callbacks[n]=e||o.getGenericOnCompleteHandler(\"Back navigation is not supported in the current client or context.\")},n.registerOnLoadHandler=b,n.registerBeforeUnloadHandler=p,n.registerChangeSettingsHandler=function(e){a.ensureInitialized(r.frameContexts.content),s.GlobalVars.changeSettingsHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"changeSettings\"])},n.navigateCrossDomain=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove,r.frameContexts.task);var t=a.sendMessageRequestToParent(\"navigateCrossDomain\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler(\"Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.\")},n.getTabInstances=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getTabInstances\",[n]);s.GlobalVars.callbacks[t]=e},n.getMruTabInstances=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getMruTabInstances\",[n]);s.GlobalVars.callbacks[t]=e},n.shareDeepLink=function(e){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"shareDeepLink\",[e.subEntityId,e.subEntityLabel,e.subEntityWebUrl])},n.executeDeepLink=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.task);var t=a.sendMessageRequestToParent(\"executeDeepLink\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler()},n.navigateToTab=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"navigateToTab\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler(\"Invalid internalTabInstanceId and/or channelId were/was provided\")},n.setFrameContext=h,n.initializeWithFrameContext=function(e,n,t){u(n,t),h(e)}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3);!function(e){var n,t;s.GlobalVars.handlers[\"settings.save\"]=function(e){var t=new o(e);n?n(t):t.notifySuccess()},s.GlobalVars.handlers[\"settings.remove\"]=function(){var e=new l;t?t(e):e.notifySuccess()},e.setValidityState=function(e){a.ensureInitialized(r.frameContexts.settings,r.frameContexts.remove),a.sendMessageRequestToParent(\"settings.setValidityState\",[e])},e.getSettings=function(e){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove);var n=a.sendMessageRequestToParent(\"settings.getSettings\");s.GlobalVars.callbacks[n]=e},e.setSettings=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings);var t=a.sendMessageRequestToParent(\"settings.setSettings\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.registerOnSaveHandler=function(e){a.ensureInitialized(r.frameContexts.settings),n=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"save\"])},e.registerOnRemoveHandler=function(e){a.ensureInitialized(r.frameContexts.remove),t=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"remove\"])};var o=function(){function e(e){this.notified=!1,this.result=e||{}}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.save.success\"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.save.failure\",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error(\"The SaveEvent may only notify success or failure once.\")},e}();var l=function(){function e(){this.notified=!1}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.remove.success\"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.remove.failure\",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error(\"The removeEvent may only notify success or failure once.\")},e}()}(n.settings||(n.settings={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0);!function(e){s.GlobalVars.handlers[\"log.request\"]=function(){if(s.GlobalVars.getLogHandler){var e=s.GlobalVars.getLogHandler();a.sendMessageRequestToParent(\"log.receive\",[e])}},e.registerGetLogHandler=function(e){a.ensureInitialized(),s.GlobalVars.getLogHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"log.request\"])}}(n.logs||(n.logs={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3),o=function(){function e(){}return e.prototype.postMessage=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"messageForChild\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.prototype.addEventListener=function(e,n){\"message\"===e&&(s.GlobalVars.handlers.messageForParent=n)},e}();n.ChildAppWindow=o;var l=function(){function e(){}return Object.defineProperty(e,\"Instance\",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.postMessage=function(e,n){a.ensureInitialized(r.frameContexts.task);var t=a.sendMessageRequestToParent(\"messageForParent\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.prototype.addEventListener=function(e,n){\"message\"===e&&(s.GlobalVars.handlers.messageForChild=n)},e}();n.ParentAppWindow=l},function(e,n,t){\"use strict\";function a(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}Object.defineProperty(n,\"__esModule\",{value:!0}),a(t(9)),a(t(14))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(10);n.bot=a.bot;var s=t(11);n.menus=s.menus;var r=t(6);n.logs=r.logs;var i=t(12);n.enterFullscreen=i.enterFullscreen,n.exitFullscreen=i.exitFullscreen,n.getChatMembers=i.getChatMembers,n.getConfigSetting=i.getConfigSetting,n.getUserJoinedTeams=i.getUserJoinedTeams,n.openFilePreview=i.openFilePreview,n.sendCustomMessage=i.sendCustomMessage,n.showNotification=i.showNotification,n.sendCustomEvent=i.sendCustomEvent,n.registerCustomHandler=i.registerCustomHandler,n.uploadCustomApp=i.uploadCustomApp;var o=t(13);n.conversations=o.conversations},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(0),s=t(1);!function(e){e.sendQuery=function(e,n,t){s.ensureInitialized();var r=s.sendMessageRequestToParent(\"bot.executeQuery\",[e]);a.GlobalVars.callbacks[r]=function(e,a){e?n(a):t(a)}},e.getSupportedCommands=function(e,n){s.ensureInitialized();var t=s.sendMessageRequestToParent(\"bot.getSupportedCommands\");a.GlobalVars.callbacks[t]=function(t,a){t?e(a):n(a)}},e.authenticate=function(e,n,t){s.ensureInitialized();var r=s.sendMessageRequestToParent(\"bot.authenticate\",[e]);a.GlobalVars.callbacks[r]=function(e,a){e?n(a):t(a)}},function(e){e.Results=\"Results\",e.Auth=\"Auth\"}(e.ResponseType||(e.ResponseType={}))}(n.bot||(n.bot={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0);!function(e){var n,t,r,i=function(){return function(){this.enabled=!0}}();e.MenuItem=i,function(e){e.dropDown=\"dropDown\",e.popOver=\"popOver\"}(e.MenuListType||(e.MenuListType={})),s.GlobalVars.handlers.navBarMenuItemPress=function(e){n&&n(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"handleNavBarMenuItemPress\",[e]))},s.GlobalVars.handlers.actionMenuItemPress=function(e){t&&t(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"handleActionMenuItemPress\",[e]))},s.GlobalVars.handlers.setModuleView=function(e){r&&r(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"viewConfigItemPress\",[e]))},e.setUpViews=function(e,n){a.ensureInitialized(),r=n,a.sendMessageRequestToParent(\"setUpViews\",[e])},e.setNavBarMenu=function(e,t){a.ensureInitialized(),n=t,a.sendMessageRequestToParent(\"setNavBarMenu\",[e])},e.showActionMenu=function(e,n){a.ensureInitialized(),t=n,a.sendMessageRequestToParent(\"showActionMenu\",[e])}}(n.menus||(n.menus={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3);n.getUserJoinedTeams=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getUserJoinedTeams\",[n]);s.GlobalVars.callbacks[t]=e},n.enterFullscreen=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"enterFullscreen\",[])},n.exitFullscreen=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"exitFullscreen\",[])},n.openFilePreview=function(e){a.ensureInitialized(r.frameContexts.content);var n=[e.entityId,e.title,e.description,e.type,e.objectUrl,e.downloadUrl,e.webPreviewUrl,e.webEditUrl,e.baseUrl,e.editFile,e.subEntityId];a.sendMessageRequestToParent(\"openFilePreview\",n)},n.showNotification=function(e){a.ensureInitialized(r.frameContexts.content);var n=[e.message,e.notificationType];a.sendMessageRequestToParent(\"showNotification\",n)},n.uploadCustomApp=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"uploadCustomApp\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},n.sendCustomMessage=function(e,n,t){a.ensureInitialized();var r=a.sendMessageRequestToParent(e,n);return\"function\"==typeof t&&(s.GlobalVars.callbacks[r]=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];t.apply(null,e)}),r},n.sendCustomEvent=function(e,n){if(a.ensureInitialized(),!s.GlobalVars.childWindow)throw new Error(\"The child window has not yet been initialized or is not present\");a.sendMessageEventToChild(e,n)},n.registerCustomHandler=function(e,n){var t=this;a.ensureInitialized(),s.GlobalVars.handlers[e]=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a];return n.apply(t,e)}},n.getChatMembers=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"getChatMembers\");s.GlobalVars.callbacks[n]=e},n.getConfigSetting=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getConfigSetting\",[n]);s.GlobalVars.callbacks[t]=e}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2);!function(e){e.openConversation=function(e){a.ensureInitialized(r.frameContexts.content);var n=a.sendMessageRequestToParent(\"conversations.openConversation\",[{title:e.title,subEntityId:e.subEntityId,conversationId:e.conversationId,channelId:e.channelId,entityId:e.entityId}]);s.GlobalVars.onCloseConversationHandler=e.onCloseConversation,s.GlobalVars.onStartConversationHandler=e.onStartConversation,s.GlobalVars.callbacks[n]=function(e,n){if(!e)throw new Error(n)}},e.closeConversation=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"conversations.closeConversation\"),s.GlobalVars.onCloseConversationHandler=null,s.GlobalVars.onStartConversationHandler=null}}(n.conversations||(n.conversations={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(15);n.appInitialization=a.appInitialization;var s=t(16);n.authentication=s.authentication;var r=t(4);n.enablePrintCapability=r.enablePrintCapability,n.executeDeepLink=r.executeDeepLink,n.getContext=r.getContext,n.getMruTabInstances=r.getMruTabInstances,n.getTabInstances=r.getTabInstances,n.initialize=r.initialize,n.initializeWithFrameContext=r.initializeWithFrameContext,n.navigateBack=r.navigateBack,n.navigateCrossDomain=r.navigateCrossDomain,n.navigateToTab=r.navigateToTab,n.print=r.print,n.registerBackButtonHandler=r.registerBackButtonHandler,n.registerBeforeUnloadHandler=r.registerBeforeUnloadHandler,n.registerChangeSettingsHandler=r.registerChangeSettingsHandler,n.registerFullScreenHandler=r.registerFullScreenHandler,n.registerOnLoadHandler=r.registerOnLoadHandler,n.registerOnThemeChangeHandler=r.registerOnThemeChangeHandler,n.setFrameContext=r.setFrameContext,n.shareDeepLink=r.shareDeepLink;var i=t(5);n.settings=i.settings;var o=t(17);n.tasks=o.tasks;var l=t(7);n.ChildAppWindow=l.ChildAppWindow,n.ParentAppWindow=l.ParentAppWindow},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(2);!function(e){e.notifyAppLoaded=function(){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.appLoaded\",[s.version])},e.notifySuccess=function(){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.success\",[s.version])},e.notifyFailure=function(e){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.failure\",[e.reason,e.message])}}(n.appInitialization||(n.appInitialization={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2);!function(e){var n,t;function i(){l();try{s.GlobalVars.childWindow&&s.GlobalVars.childWindow.close()}finally{s.GlobalVars.childWindow=null,s.GlobalVars.childOrigin=null}}function o(e){n=e,i();var t=n.width||600,a=n.height||400;t=Math.min(t,s.GlobalVars.currentWindow.outerWidth-400),a=Math.min(a,s.GlobalVars.currentWindow.outerHeight-200);var r=document.createElement(\"a\");r.href=n.url;var o=void 0!==s.GlobalVars.currentWindow.screenLeft?s.GlobalVars.currentWindow.screenLeft:s.GlobalVars.currentWindow.screenX,l=void 0!==s.GlobalVars.currentWindow.screenTop?s.GlobalVars.currentWindow.screenTop:s.GlobalVars.currentWindow.screenY;o+=s.GlobalVars.currentWindow.outerWidth/2-t/2,l+=s.GlobalVars.currentWindow.outerHeight/2-a/2,s.GlobalVars.childWindow=s.GlobalVars.currentWindow.open(r.href,\"_blank\",\"toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=\"+l+\", left=\"+o+\", width=\"+t+\", height=\"+a),s.GlobalVars.childWindow?u():c(\"FailedToOpenWindow\")}function l(){t&&(clearInterval(t),t=0),delete s.GlobalVars.handlers.initialize,delete s.GlobalVars.handlers.navigateCrossDomain}function u(){l(),t=s.GlobalVars.currentWindow.setInterval(function(){if(!s.GlobalVars.childWindow||s.GlobalVars.childWindow.closed)c(\"CancelledByUser\");else{var e=s.GlobalVars.childOrigin;try{s.GlobalVars.childOrigin=\"*\",a.sendMessageEventToChild(\"ping\")}finally{s.GlobalVars.childOrigin=e}}},100),s.GlobalVars.handlers.initialize=function(){return[r.frameContexts.authentication,s.GlobalVars.hostClientType]},s.GlobalVars.handlers.navigateCrossDomain=function(){return!1}}function c(e){try{n&&n.failureCallback&&n.failureCallback(e)}finally{n=null,i()}}function d(e,n,t){if(e){var a=document.createElement(\"a\");a.href=decodeURIComponent(e),a.host&&a.host!==window.location.host&&\"outlook.office.com\"===a.host&&a.search.indexOf(\"client_type=Win32_Outlook\")>-1&&(n&&\"result\"===n&&(t&&(a.href=f(a.href,\"result\",t)),s.GlobalVars.currentWindow.location.assign(f(a.href,\"authSuccess\",\"\"))),n&&\"reason\"===n&&(t&&(a.href=f(a.href,\"reason\",t)),s.GlobalVars.currentWindow.location.assign(f(a.href,\"authFailure\",\"\"))))}}function f(e,n,t){var a=e.indexOf(\"#\"),s=-1===a?\"#\":e.substr(a);return s=s+\"&\"+n+(\"\"!==t?\"=\"+t:\"\"),(e=-1===a?e:e.substr(0,a))+s}s.GlobalVars.handlers[\"authentication.authenticate.success\"]=function(e){try{n&&n.successCallback&&n.successCallback(e)}finally{n=null,i()}},s.GlobalVars.handlers[\"authentication.authenticate.failure\"]=c,e.registerAuthenticationHandlers=function(e){n=e},e.authenticate=function(e){var t=void 0!==e?e:n;if(a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove,r.frameContexts.task),\"desktop\"===s.GlobalVars.hostClientType||\"android\"===s.GlobalVars.hostClientType||\"ios\"===s.GlobalVars.hostClientType||\"rigel\"===s.GlobalVars.hostClientType){var i=document.createElement(\"a\");i.href=t.url;var l=a.sendMessageRequestToParent(\"authentication.authenticate\",[i.href,t.width,t.height]);s.GlobalVars.callbacks[l]=function(e,n){e?t.successCallback(n):t.failureCallback(n)}}else o(t)},e.getAuthToken=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"authentication.getAuthToken\",[e.resources]);s.GlobalVars.callbacks[n]=function(n,t){n?e.successCallback(t):e.failureCallback(t)}},e.getUser=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"authentication.getUser\");s.GlobalVars.callbacks[n]=function(n,t){n?e.successCallback(t):e.failureCallback(t)}},e.notifySuccess=function(e,n){d(n,\"result\",e),a.ensureInitialized(r.frameContexts.authentication),a.sendMessageRequestToParent(\"authentication.authenticate.success\",[e]),a.waitForMessageQueue(s.GlobalVars.parentWindow,function(){return setTimeout(function(){return s.GlobalVars.currentWindow.close()},200)})},e.notifyFailure=function(e,n){d(n,\"reason\",e),a.ensureInitialized(r.frameContexts.authentication),a.sendMessageRequestToParent(\"authentication.authenticate.failure\",[e]),a.waitForMessageQueue(s.GlobalVars.parentWindow,function(){return setTimeout(function(){return s.GlobalVars.currentWindow.close()},200)})}}(n.authentication||(n.authentication={}))},function(e,n,t){\"use strict\";var a=this&&this.__rest||function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)n.indexOf(a[s])<0&&(t[a[s]]=e[a[s]])}return t};Object.defineProperty(n,\"__esModule\",{value:!0});var s=t(1),r=t(0),i=t(2),o=t(7);!function(e){e.startTask=function(e,n){s.ensureInitialized(i.frameContexts.content);var t=s.sendMessageRequestToParent(\"tasks.startTask\",[e]);return r.GlobalVars.callbacks[t]=n,new o.ChildAppWindow},e.updateTask=function(e){s.ensureInitialized(i.frameContexts.content,i.frameContexts.task),e.width,e.height;var n=a(e,[\"width\",\"height\"]);if(Object.keys(n).length)throw new Error(\"updateTask requires a taskInfo argument containing only width and height\");s.sendMessageRequestToParent(\"tasks.updateTask\",[e])},e.submitTask=function(e,n){s.ensureInitialized(i.frameContexts.content,i.frameContexts.task),s.sendMessageRequestToParent(\"tasks.completeTask\",[e,Array.isArray(n)?n:[n]])}}(n.tasks||(n.tasks={}))}])});"],"sourceRoot":""}